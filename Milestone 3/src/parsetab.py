
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN AUTO BREAK CASE FLOAT FOR GOTO IF INT LONG REGISTER UNION UNSIGNED VOID VOLATILE WHILE RESTRICT INLINE IDENTIFIER TYPEID I_CONSTANT F_CONSTANT STRINGLITERAL CCONST PLUS MINUS TIMES DIVIDE MOD OR_OP AND_OP NOT_OP XOR LNOT LEFT_OP RIGHT_OP LOR LAND LT_OP LE_OP GT_OP GE_OP EQ_OP NE_OP EQUALS MUL_ASSIGN DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN AND_ASSIGN OR_ASSIGN XOR_ASSIGN INC_OP DEC_OP PTR_OP CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS ALIGNAS ALIGNOF BOOL COMPLEX GENERIC IMAGINARY NORETURN STATIC_ASSERT THREAD_LOCAL FUNC_NAMEtranslation_unit : external_declaration\n\t\t\t\t\t\t| translation_unit external_declaration primary_expression : constant\n\t\t\t\t\t\t\t| string\n\t\t\t\t\t\t\t| LPAREN expression RPAREN\n\t\t\t\t\t\t\t| generic_selection primary_expression : IDENTIFIER constant : I_CONSTANT\n\t\t\t\t| F_CONSTANT\n\t\t\t\t| CCONST enumeration_constant : IDENTIFIERstring : STRINGLITERAL\n\t\t\t\t| FUNC_NAME generic_selection : GENERIC LPAREN assignment_expression COMMA generic_assoc_list RPAREN generic_assoc_list : generic_association\n\t\t\t\t\t\t\t| generic_assoc_list COMMA generic_association generic_association : type_name COLON assignment_expression\n\t\t\t\t\t\t\t| DEFAULT COLON assignment_expression postfix_expression : primary_expression\n\t\t\t\t\t\t\t| postfix_expression LBRACKET expression RBRACKET\n\t\t\t\t\t\t\t| postfix_expression LPAREN RPAREN\n\t\t\t\t\t\t\t| postfix_expression LPAREN argument_expression_list RPAREN\n\t\t\t\t\t\t\t| postfix_expression PERIOD IDENTIFIER\n\t\t\t\t\t\t\t| postfix_expression PTR_OP IDENTIFIER\n\t\t\t\t\t\t\t| LPAREN type_name RPAREN LBRACE initializer_list RBRACE\n\t\t\t\t\t\t\t| LPAREN type_name RPAREN LBRACE initializer_list COMMA RBRACE postfix_expression : postfix_expression INC_OP\n\t\t\t\t\t\t\t| postfix_expression DEC_OP argument_expression_list : assignment_expression\n\t\t\t\t\t\t\t\t| argument_expression_list COMMA assignment_expression unary_expression : postfix_expression\n\t\t\t\t\t\t| INC_OP unary_expression\n\t\t\t\t\t\t| DEC_OP unary_expression unary_expression : unary_operator cast_expression\n\t\t\t\t\t\t| SIZEOF unary_expression\n\t\t\t\t\t\t| SIZEOF LPAREN type_name RPAREN\n\t\t\t\t\t\t| ALIGNOF LPAREN type_name RPAREN unary_operator : AND_OP\n\t\t\t\t\t\t| TIMES\n\t\t\t\t\t\t| PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| NOT_OP\n\t\t\t\t\t\t| LNOT cast_expression : unary_expression\n\t\t\t\t\t\t| LPAREN type_name RPAREN cast_expression multiplicative_expression : cast_expression\n\t\t\t\t\t\t\t\t | multiplicative_expression TIMES cast_expression\n\t\t\t\t\t\t\t\t | multiplicative_expression DIVIDE cast_expression \n\t\t\t\t\t\t\t\t | multiplicative_expression MOD cast_expression additive_expression : multiplicative_expression\n\t\t\t\t\t\t\t| additive_expression PLUS multiplicative_expression\n\t\t\t\t\t\t\t| additive_expression MINUS multiplicative_expression shift_expression : additive_expression\n\t\t\t\t\t\t| shift_expression LEFT_OP additive_expression\n\t\t\t\t\t\t| shift_expression RIGHT_OP additive_expression relational_expression : shift_expression\n\t\t\t\t\t\t\t\t| relational_expression LT_OP shift_expression\n\t\t\t\t\t\t\t\t| relational_expression GT_OP shift_expression\n\t\t\t\t\t\t\t\t| relational_expression LE_OP shift_expression\n\t\t\t\t\t\t\t\t| relational_expression GE_OP shift_expression equality_expression : relational_expression\n\t \t\t\t\t\t\t| equality_expression EQ_OP relational_expression\n\t \t\t\t\t\t\t| equality_expression NE_OP relational_expression and_expression : equality_expression\n\t\t\t\t\t\t| and_expression AND_OP equality_expression exclusive_or_expression : and_expression\n\t\t\t\t\t\t\t\t| exclusive_or_expression XOR and_expression inclusive_or_expression : exclusive_or_expression\n\t\t\t\t\t\t\t\t| inclusive_or_expression OR_OP exclusive_or_expression logical_and_expression : inclusive_or_expression\n\t\t\t\t\t\t\t\t| logical_and_expression LAND inclusive_or_expression logical_or_expression : logical_and_expression\n\t\t\t\t\t\t\t\t| logical_or_expression LOR logical_and_expression conditional_expression : logical_or_expression\n\t\t\t\t\t\t\t\t| logical_or_expression CONDOP expression COLON conditional_expression assignment_expression : conditional_expression\n\t\t\t\t\t\t\t\t| unary_expression assignment_operator assignment_expression assignment_operator : EQUALS \n\t\t\t\t\t\t\t| MUL_ASSIGN\n\t\t\t\t\t\t\t| DIV_ASSIGN\n\t\t\t\t\t\t\t| MOD_ASSIGN\n\t\t\t\t\t\t\t| ADD_ASSIGN\n\t\t\t\t\t\t\t| SUB_ASSIGN\n\t\t\t\t\t\t\t| LEFT_ASSIGN\n\t\t\t\t\t\t\t| RIGHT_ASSIGN\n\t\t\t\t\t\t\t| AND_ASSIGN\n\t\t\t\t\t\t\t| XOR_ASSIGN\n\t\t\t\t\t\t\t| OR_ASSIGN\n\t\t\t\t\t\t\t expression : assignment_expression\n\t\t\t\t\t| expression COMMA assignment_expression constant_expression : conditional_expressiondeclaration : declaration_specifiers SEMI\n\t\t\t\t\t| declaration_specifiers init_declarator_list SEMI\n\t\t\t\t\t| static_assert_declaration declaration_specifiers : storage_class_specifier declaration_specifiers\n\t\t\t\t\t\t\t\t| storage_class_specifier\n\t\t\t\t\t\t\t\t| type_specifier declaration_specifiers\n\t\t\t\t\t\t\t\t| type_specifier\n\t\t\t\t\t\t\t\t| type_qualifier declaration_specifiers\n\t\t\t\t\t\t\t\t| type_qualifier\n\t\t\t\t\t\t\t\t| function_specifier declaration_specifiers\n\t\t\t\t\t\t\t\t| function_specifier\n\t\t\t\t\t\t\t\t| alignment_specifier declaration_specifiers\n\t\t\t\t\t\t\t\t| alignment_specifier init_declarator_list : init_declarator\n\t\t\t\t\t\t\t| init_declarator_list COMMA init_declarator init_declarator : declarator EQUALS initializer\n\t\t\t\t\t\t| declarator storage_class_specifier : TYPEDEF\n\t\t\t\t\t\t\t\t| EXTERN\n\t\t\t\t\t\t\t\t| STATIC\n\t\t\t\t\t\t\t\t| THREAD_LOCAL\n\t\t\t\t\t\t\t\t| AUTO\n\t\t\t\t\t\t\t\t| REGISTER type_specifier : VOID\n\t\t\t\t\t\t| CHAR \n\t\t\t\t\t\t| SHORT\n\t\t\t\t\t\t| INT \n\t\t\t\t\t\t| LONG\n\t\t\t\t\t\t| FLOAT\n\t\t\t\t\t\t| DOUBLE\n\t\t\t\t\t\t| SIGNED\n\t\t\t\t\t\t| UNSIGNED\n\t\t\t\t\t\t| BOOL\n\t\t\t\t\t\t| COMPLEX\n\t\t\t\t\t\t| IMAGINARY\n\t\t\t\t\t\t| struct_or_union_specifier\n\t\t\t\t\t\t| enum_specifier\n\t\t\t\t\t\t| TYPEID struct_or_union_specifier : struct_or_union LBRACE struct_declaration_list RBRACE\n\t\t\t\t\t\t\t\t| struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE\n\t\t\t\t\t\t\t\t| struct_or_union IDENTIFIER struct_or_union : STRUCT\n\t\t\t\t\t\t| UNION struct_declaration_list : struct_declaration\n\t\t\t\t\t\t\t\t| struct_declaration_list struct_declaration struct_declaration : specifier_qualifier_list SEMI \n\t\t\t\t\t\t\t| specifier_qualifier_list struct_declarator_list SEMI\n\t\t\t\t\t\t\t| static_assert_declaration specifier_qualifier_list : type_specifier specifier_qualifier_list\n\t\t\t\t\t\t\t\t| type_specifier\n\t\t\t\t\t\t\t\t| type_qualifier specifier_qualifier_list\n\t\t\t\t\t\t\t\t| type_qualifier struct_declarator_list : struct_declarator\n\t\t\t\t\t\t\t\t| struct_declarator_list COMMA struct_declarator struct_declarator : COLON constant_expression\n\t\t\t\t\t\t\t| declarator COLON constant_expression\n\t\t\t\t\t\t\t| declarator enum_specifier : ENUM LBRACE enumerator_list RBRACE\n\t\t\t\t\t\t| ENUM LBRACE enumerator_list COMMA RBRACE\n\t\t\t\t\t\t| ENUM IDENTIFIER LBRACE enumerator_list RBRACE\n\t\t\t\t\t\t| ENUM IDENTIFIER LBRACE enumerator_list COMMA RBRACE\n\t\t\t\t\t\t| ENUM IDENTIFIER enumerator_list : enumerator\n\t\t\t\t\t\t| enumerator_list COMMA enumerator enumerator : enumeration_constant EQUALS constant_expression\n\t\t\t\t\t| enumeration_constant type_qualifier : CONST\n\t\t\t\t\t\t| RESTRICT\n\t\t\t\t\t\t| VOLATILE\n\t\t\t\t\t\tfunction_specifier : INLINE\n\t\t\t\t\t\t\t| NORETURN alignment_specifier : ALIGNAS LPAREN type_name RPAREN \n\t\t\t\t\t\t\t| ALIGNAS LPAREN constant_expression RPAREN declarator : pointer direct_declarator\n\t\t\t\t\t| direct_declarator direct_declarator : IDENTIFIER\n\t\t\t\t\t\t\t| LPAREN declarator RPAREN\n\t\t\t\t\t\t\t| direct_declarator LBRACKET RBRACKET\n\t\t\t\t\t\t\t| direct_declarator LBRACKET TIMES RBRACKET\n\t\t\t\t\t\t\t| direct_declarator LBRACKET STATIC type_qualifier_list assignment_expression RBRACKET\n\t\t\t\t\t\t\t| direct_declarator LBRACKET STATIC assignment_expression RBRACKET\n\t\t\t\t\t\t\t| direct_declarator LBRACKET type_qualifier_list TIMES RBRACKET\n\t\t\t\t\t\t\t| direct_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n\t\t\t\t\t\t\t| direct_declarator LBRACKET type_qualifier_list assignment_expression RBRACKET\n\t\t\t\t\t\t\t| direct_declarator LBRACKET type_qualifier_list RBRACKET\n\t\t\t\t\t\t\t| direct_declarator LBRACKET assignment_expression RBRACKET\n\t\t\t\t\t\t\t| direct_declarator LPAREN parameter_type_list RPAREN\n\t\t\t\t\t\t\t| direct_declarator LPAREN RPAREN\n\t\t\t\t\t\t\t| direct_declarator LPAREN identifier_list RPAREN pointer : TIMES type_qualifier_list pointer\n\t\t\t\t| TIMES type_qualifier_list \n\t\t\t\t| TIMES pointer\n\t\t\t\t| TIMES type_qualifier_list : type_qualifier\n\t\t\t\t\t\t\t| type_qualifier_list type_qualifier parameter_type_list : parameter_list COMMA ELLIPSIS\n\t\t\t\t\t\t\t| parameter_list parameter_list : parameter_declaration\n\t\t\t\t\t\t| parameter_list COMMA parameter_declaration parameter_declaration : declaration_specifiers declarator\n\t\t\t\t\t\t\t\t| declaration_specifiers abstract_declarator\n\t\t\t\t\t\t\t\t| declaration_specifiers identifier_list : IDENTIFIER\n\t\t\t\t\t\t| identifier_list COMMA IDENTIFIER type_name : specifier_qualifier_list abstract_declarator\n\t\t\t\t\t| specifier_qualifier_list abstract_declarator : pointer direct_abstract_declarator\n\t\t\t\t\t\t\t| pointer\n\t\t\t\t\t\t\t| direct_abstract_declarator direct_abstract_declarator : LPAREN abstract_declarator RPAREN \n\t\t\t\t\t\t\t\t\t| LBRACKET RBRACKET\n\t\t\t\t\t\t\t\t\t| LBRACKET TIMES RBRACKET \n\t\t\t\t\t\t\t\t\t| LBRACKET STATIC type_qualifier_list assignment_expression RBRACKET \n\t\t\t\t\t\t\t\t\t| LBRACKET STATIC assignment_expression RBRACKET \n\t\t\t\t\t\t\t\t\t| LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET \n\t\t\t\t\t\t\t\t\t| LBRACKET type_qualifier_list assignment_expression RBRACKET \n\t\t\t\t\t\t\t\t\t| LBRACKET type_qualifier_list RBRACKET \n\t\t\t\t\t\t\t\t\t| LBRACKET assignment_expression RBRACKET \n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LBRACKET RBRACKET\n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LBRACKET TIMES RBRACKET\n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LBRACKET STATIC type_qualifier_list assignment_expression RBRACKET\n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LBRACKET STATIC assignment_expression RBRACKET\n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LBRACKET type_qualifier_list assignment_expression RBRACKET\n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET \n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LBRACKET type_qualifier_list RBRACKET\n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LBRACKET assignment_expression RBRACKET\n\t\t\t\t\t\t\t\t\t| LPAREN RPAREN \n\t\t\t\t\t\t\t\t\t| LPAREN parameter_type_list RPAREN \n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LPAREN RPAREN\n\t\t\t\t\t\t\t\t\t| direct_abstract_declarator LPAREN parameter_type_list RPAREN\n\t\t\t\t\t\t\t\t\t initializer : LBRACE initializer_list RBRACE\n\t\t\t\t\t| LBRACE initializer_list COMMA RBRACE \n\t\t\t\t\t| assignment_expression initializer_list : designation initializer\n\t\t\t\t\t\t| initializer\n\t\t\t\t\t\t| initializer_list COMMA designation initializer\n\t\t\t\t\t\t| initializer_list COMMA initializer\n\t\t\t\t\t\tdesignation : designator_list EQUALS designator_list : designator\n\t\t\t\t\t\t| designator_list designator designator : LBRACKET constant_expression RBRACKET \n\t\t\t\t\t| PERIOD IDENTIFIER static_assert_declaration : STATIC_ASSERT LPAREN constant_expression COMMA STRINGLITERAL RPAREN SEMI statement : labeled_statement\n\t\t\t\t\t| compound_statement\n\t\t\t\t\t| expression_statement\n\t\t\t\t\t| selection_statement\n\t\t\t\t\t| iteration_statement\n\t\t\t\t\t| jump_statement labeled_statement : IDENTIFIER COLON statement\n\t\t\t\t\t\t| CASE constant_expression COLON statement\n\t\t\t\t\t\t| DEFAULT COLON statement\n\t\t\t\t\t\t compound_statement : LBRACE RBRACE \n\t\t\t\t\t\t\t| LBRACE block_item_list RBRACE block_item_list : block_item\n\t\t\t\t\t\t| block_item_list block_item block_item : declaration\n\t\t\t\t\t| statement expression_statement : SEMI \n\t\t\t\t\t\t\t| expression SEMI  selection_statement : IF LPAREN expression RPAREN statement ELSE statement\n\t\t\t\t\t\t\t| IF LPAREN expression RPAREN statement selection_statement : SWITCH LPAREN expression RPAREN statement iteration_statement : WHILE LPAREN expression RPAREN statement iteration_statement :  DO statement WHILE LPAREN expression RPAREN SEMI iteration_statement : FOR LPAREN expression_statement expression_statement RPAREN statement\n\t\t\t\t\t\t\t| FOR LPAREN expression_statement expression_statement expression RPAREN statement\n\t\t\t\t\t\t\titeration_statement : FOR LPAREN declaration expression_statement RPAREN statement\n\t\t\t\t\t\t\t| FOR LPAREN declaration expression_statement expression RPAREN statement\n\t\t\t\t\t\t\t jump_statement : GOTO IDENTIFIER SEMI \n\t\t\t\t\t\t| CONTINUE SEMI\n\t\t\t\t\t\t| BREAK SEMI jump_statement : RETURN SEMI\n\t\t\t\t\t\t| RETURN expression SEMI external_declaration : function_definition\n\t\t\t\t\t\t\t| declaration function_definition : declaration_specifiers declarator declaration_list compound_statement\n\t\t\t\t\t\t\t| declaration_specifiers declarator compound_statement declaration_list : declaration\n\t\t\t\t\t\t| declaration_list declaration '
    
_lr_action_items = {'GENERIC':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,80,80,-93,80,-185,80,80,-42,-41,-40,80,80,80,-43,80,-39,-38,80,80,80,-39,80,-186,80,-237,-239,-235,80,-236,80,80,-249,-248,-240,-246,80,-244,-250,-238,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,80,80,80,-39,80,80,-264,80,-247,-245,-262,80,-251,80,80,80,80,-263,80,80,80,80,-39,80,80,80,80,-229,-261,-265,80,80,-243,80,-241,80,80,80,80,80,80,80,-39,80,80,80,80,-242,80,80,80,80,80,-234,80,80,-255,-254,-253,80,80,80,-257,80,-259,80,80,-258,-260,-256,-252,]),'VOID':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[6,6,-94,-158,-127,-115,-116,-117,-111,-110,6,-1,6,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,6,6,-122,-128,-125,-124,6,-161,-120,-92,-167,-166,6,6,-153,-2,-132,6,-93,-165,6,-269,-270,6,6,6,6,6,6,6,-139,-135,6,-169,-179,-168,-237,-239,-235,-236,6,-249,-248,-240,-246,-244,-250,-238,-268,-271,6,6,6,-163,-164,6,-149,6,-136,-130,-137,-177,-176,-170,-178,6,-180,6,-264,6,-247,-245,-262,-251,-263,6,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,6,-152,-171,-174,-242,-234,-255,-254,-253,6,-257,-259,-258,-260,-256,-252,]),'LBRACKET':([1,3,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,25,27,28,32,33,34,35,36,37,38,39,41,42,44,48,49,50,54,55,58,60,61,63,67,70,71,72,86,90,91,92,94,98,99,101,106,108,112,113,119,120,142,143,147,150,151,152,155,171,192,199,203,208,213,214,224,225,227,229,235,255,259,260,262,263,266,267,273,276,315,316,318,323,329,330,335,338,339,342,348,351,352,359,360,362,380,381,385,388,391,392,393,394,399,400,402,406,407,408,426,429,432,435,436,437,448,452,453,454,455,456,459,469,470,471,],[-96,-158,-127,-115,-116,-117,-111,-110,-102,-98,-114,-123,-119,-160,-126,-109,-162,-113,-112,-159,-129,-118,-121,-100,-104,-122,-128,-125,-124,-161,-120,-95,-167,68,-184,-101,-97,-153,-99,-103,-132,68,-182,-185,-183,-10,-13,-12,-6,-141,-143,-8,-3,-7,-19,-4,216,-9,223,-169,-179,223,-186,-181,-168,271,-7,-140,-142,-163,-164,-28,-27,223,333,223,-149,-130,-177,-176,-170,-178,223,223,-180,-230,271,-24,-23,-21,-5,-202,-218,333,-150,-151,-131,-172,-175,-173,271,-233,-231,-20,-22,271,-209,-208,-203,-219,-201,-210,-220,-152,-171,-174,-232,-205,-207,-217,-216,-211,-221,-14,-25,271,-204,-206,-213,-214,-26,-212,-215,]),'DIV_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,248,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'NOT_OP':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,81,81,-93,81,-185,81,81,-42,-41,-40,81,81,81,-43,81,-39,-38,81,81,81,-39,81,-186,81,-237,-239,-235,81,-236,81,81,-249,-248,-240,-246,81,-244,-250,-238,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,81,81,81,-39,81,81,-264,81,-247,-245,-262,81,-251,81,81,81,81,-263,81,81,81,81,-39,81,81,81,81,-229,-261,-265,81,81,-243,81,-241,81,81,81,81,81,81,81,-39,81,81,81,81,-242,81,81,81,81,81,-234,81,81,-255,-254,-253,81,81,81,-257,81,-259,81,81,-258,-260,-256,-252,]),'MINUS':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,86,87,88,89,90,91,92,93,95,99,101,102,105,106,108,110,112,113,115,116,117,118,119,135,136,138,139,140,150,155,156,157,159,160,161,163,168,170,171,172,173,175,176,177,178,179,184,185,187,188,189,190,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,213,214,216,217,218,219,220,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,299,300,301,303,304,306,307,315,316,318,323,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,377,379,380,381,382,383,384,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,448,450,451,452,453,460,461,462,463,465,469,472,473,474,475,],[-94,-158,-160,-159,-92,82,82,-93,82,-185,82,82,-42,-41,-40,-10,82,-44,82,-13,-12,-6,82,-50,-8,-3,202,-46,-7,-19,-43,-4,-31,82,-39,-38,82,-9,-44,82,82,-39,82,-186,82,-237,-239,-235,82,-236,82,82,-249,-7,-248,-240,-246,82,-244,-250,-238,82,82,-32,82,-33,-35,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-28,-27,82,82,82,82,-34,82,82,82,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,82,82,82,-39,82,82,-264,82,-247,-245,-262,82,-251,82,82,82,82,-263,82,-49,-48,-47,202,202,-51,-52,-24,-23,-21,-5,82,82,82,-39,82,82,82,82,-229,-261,-265,82,82,-243,82,-241,-37,-36,-20,-22,82,82,-45,82,82,82,82,82,-39,82,82,82,82,-242,82,82,82,82,82,-234,82,82,-255,-254,-253,-14,82,82,-25,82,-257,82,-259,82,82,-26,-258,-260,-256,-252,]),'RPAREN':([1,3,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,25,27,28,32,33,34,35,36,37,38,39,41,42,44,48,49,50,54,55,58,60,61,63,67,69,70,71,72,73,83,86,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,119,120,121,135,141,142,143,144,145,146,147,148,149,150,151,152,178,180,187,189,190,192,199,203,208,213,214,217,220,221,222,224,225,226,227,229,235,255,259,260,261,262,263,264,265,266,267,285,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,322,323,329,330,331,332,334,335,338,339,341,342,347,348,351,352,354,355,356,368,370,372,375,377,379,380,381,384,388,391,392,393,394,399,400,401,402,406,407,412,413,419,422,423,424,426,429,432,435,436,437,441,443,446,448,452,454,455,456,459,466,467,468,469,470,471,],[-96,-158,-127,-115,-116,-117,-111,-110,-102,-98,-114,-123,-119,-160,-126,-109,-162,-113,-112,-159,-129,-118,-121,-100,-104,-122,-128,-125,-124,-161,-120,-95,-167,-166,-184,-101,-97,-153,-99,-103,-132,-165,143,-182,-185,-183,152,-70,-10,-44,-13,-12,-6,-141,-50,-72,-56,-143,-8,-68,-3,-53,203,-61,-46,-7,208,-19,-64,-66,-4,-31,-74,-9,-197,-91,-44,-76,-169,-179,-194,262,-189,-193,267,-188,-186,-181,-168,-250,-89,-32,-33,-35,-140,-142,-163,-164,-28,-27,318,-34,323,324,330,-200,-196,-199,-149,-130,-177,-176,-170,353,-178,330,-192,-191,-199,-180,-251,-69,377,378,379,-49,-48,-47,-71,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,-29,381,-73,-5,-202,-218,393,394,400,-198,-150,-151,403,-131,-77,-172,-175,-173,-195,-187,-190,-90,414,416,418,-37,-36,-20,-22,-45,-209,-208,-203,-219,-201,-210,-220,437,-152,-171,-174,440,442,448,-15,-30,-75,-205,-207,-217,-216,-211,-221,461,463,464,-14,-25,-204,-206,-213,-214,-16,-17,-18,-26,-212,-215,]),'LONG':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[16,16,-94,-158,-127,-115,-116,-117,-111,-110,16,-1,16,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,16,16,-122,-128,-125,-124,16,-161,-120,-92,-167,-166,16,16,-153,-2,-132,16,-93,-165,16,-269,-270,16,16,16,16,16,16,16,-139,-135,16,-169,-179,-168,-237,-239,-235,-236,16,-249,-248,-240,-246,-244,-250,-238,-268,-271,16,16,16,-163,-164,16,-149,16,-136,-130,-137,-177,-176,-170,-178,16,-180,16,-264,16,-247,-245,-262,-251,-263,16,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,16,-152,-171,-174,-242,-234,-255,-254,-253,16,-257,-259,-258,-260,-256,-252,]),'PLUS':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,86,87,88,89,90,91,92,93,95,99,101,102,105,106,108,110,112,113,115,116,117,118,119,135,136,138,139,140,150,155,156,157,159,160,161,163,168,170,171,172,173,175,176,177,178,179,184,185,187,188,189,190,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,213,214,216,217,218,219,220,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,299,300,301,303,304,306,307,315,316,318,323,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,377,379,380,381,382,383,384,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,448,450,451,452,453,460,461,462,463,465,469,472,473,474,475,],[-94,-158,-160,-159,-92,84,84,-93,84,-185,84,84,-42,-41,-40,-10,84,-44,84,-13,-12,-6,84,-50,-8,-3,201,-46,-7,-19,-43,-4,-31,84,-39,-38,84,-9,-44,84,84,-39,84,-186,84,-237,-239,-235,84,-236,84,84,-249,-7,-248,-240,-246,84,-244,-250,-238,84,84,-32,84,-33,-35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-28,-27,84,84,84,84,-34,84,84,84,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,84,84,84,-39,84,84,-264,84,-247,-245,-262,84,-251,84,84,84,84,-263,84,-49,-48,-47,201,201,-51,-52,-24,-23,-21,-5,84,84,84,-39,84,84,84,84,-229,-261,-265,84,84,-243,84,-241,-37,-36,-20,-22,84,84,-45,84,84,84,84,84,-39,84,84,84,84,-242,84,84,84,84,84,-234,84,84,-255,-254,-253,-14,84,84,-25,84,-257,84,-259,84,84,-26,-258,-260,-256,-252,]),'ELLIPSIS':([269,],[355,]),'RBRACE':([2,47,66,78,83,86,88,90,91,92,95,96,97,99,100,101,102,104,105,106,108,109,111,112,113,114,119,121,122,123,124,125,129,130,131,135,141,154,156,157,159,161,163,170,172,173,175,177,178,179,187,189,190,213,214,220,230,231,233,234,237,270,272,278,281,282,283,285,291,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,322,323,336,337,340,346,347,358,359,361,364,365,369,373,377,379,380,381,384,409,410,415,424,425,438,439,444,445,447,448,452,453,460,462,469,472,473,474,475,],[-94,-92,-93,177,-70,-10,-44,-13,-12,-6,-50,-72,-56,-8,-68,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,-74,-9,-91,-154,-157,229,-11,235,-139,-135,-44,-76,-224,-237,-239,-235,-236,282,-249,-248,-240,-246,-244,-250,-238,-32,-33,-35,-28,-27,-34,338,339,342,-136,-137,-226,358,-264,-247,-245,-262,-251,-263,-69,-49,-48,-47,-71,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,-73,-5,-156,-155,402,-138,-77,-222,410,-225,-261,-265,-243,-241,-37,-36,-20,-22,-45,-228,-223,-242,-75,452,-234,-227,-255,-254,-253,-14,-25,469,-257,-259,-26,-258,-260,-256,-252,]),'ENUM':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[24,24,-94,-158,-127,-115,-116,-117,-111,-110,24,-1,24,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,24,24,-122,-128,-125,-124,24,-161,-120,-92,-167,-166,24,24,-153,-2,-132,24,-93,-165,24,-269,-270,24,24,24,24,24,24,24,-139,-135,24,-169,-179,-168,-237,-239,-235,-236,24,-249,-248,-240,-246,-244,-250,-238,-268,-271,24,24,24,-163,-164,24,-149,24,-136,-130,-137,-177,-176,-170,-178,24,-180,24,-264,24,-247,-245,-262,-251,-263,24,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,24,-152,-171,-174,-242,-234,-255,-254,-253,24,-257,-259,-258,-260,-256,-252,]),'THREAD_LOCAL':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,58,62,63,66,67,69,75,77,78,79,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,203,208,224,229,235,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,348,351,352,364,365,369,373,402,406,407,415,438,444,445,447,460,462,472,473,474,475,],[25,25,-94,-158,-127,-115,-116,-117,-111,-110,25,-1,25,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,25,25,-122,-128,-125,-124,25,-161,-120,-92,-167,-166,25,-153,-2,-132,-93,-165,25,-269,-270,25,25,-169,-179,-168,-237,-239,-235,-236,25,-249,-248,-240,-246,-244,-250,-238,-268,-271,-163,-164,25,-149,-130,-177,-176,-170,-178,25,-180,25,-264,25,-247,-245,-262,-251,-263,25,-150,-151,-131,-172,-175,-173,-261,-265,-243,-241,-152,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'PERIOD':([86,90,91,92,99,101,106,108,112,113,119,155,171,213,214,273,276,315,316,318,323,359,360,362,380,381,385,408,448,452,453,469,],[-10,-13,-12,-6,-8,-3,-7,-19,-4,215,-9,274,-7,-28,-27,-230,274,-24,-23,-21,-5,274,-233,-231,-20,-22,274,-232,-14,-25,274,-26,]),'LEFT_OP':([86,88,90,91,92,95,97,99,101,102,105,106,108,112,113,119,135,171,187,189,190,213,214,220,299,300,301,303,304,306,307,308,309,310,311,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-50,197,-8,-3,-53,-46,-7,-19,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,-54,-55,-51,-52,197,197,197,197,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'ALIGNOF':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,85,85,-93,85,-185,85,85,-42,-41,-40,85,85,85,-43,85,-39,-38,85,85,85,-39,85,-186,85,-237,-239,-235,85,-236,85,85,-249,-248,-240,-246,85,-244,-250,-238,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,85,85,85,-39,85,85,-264,85,-247,-245,-262,85,-251,85,85,85,85,-263,85,85,85,85,-39,85,85,85,85,-229,-261,-265,85,85,-243,85,-241,85,85,85,85,85,85,85,-39,85,85,85,85,-242,85,85,85,85,85,-234,85,85,-255,-254,-253,85,85,85,-257,85,-259,85,85,-258,-260,-256,-252,]),'DOUBLE':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[33,33,-94,-158,-127,-115,-116,-117,-111,-110,33,-1,33,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,33,33,-122,-128,-125,-124,33,-161,-120,-92,-167,-166,33,33,-153,-2,-132,33,-93,-165,33,-269,-270,33,33,33,33,33,33,33,-139,-135,33,-169,-179,-168,-237,-239,-235,-236,33,-249,-248,-240,-246,-244,-250,-238,-268,-271,33,33,33,-163,-164,33,-149,33,-136,-130,-137,-177,-176,-170,-178,33,-180,33,-264,33,-247,-245,-262,-251,-263,33,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,33,-152,-171,-174,-242,-234,-255,-254,-253,33,-257,-259,-258,-260,-256,-252,]),'LT_OP':([86,88,90,91,92,95,97,99,101,102,104,105,106,108,112,113,119,135,171,187,189,190,213,214,220,299,300,301,303,304,306,307,308,309,310,311,312,313,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-50,-56,-8,-3,-53,205,-46,-7,-19,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,-54,-55,-51,-52,-59,-57,-60,-58,205,205,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'INC_OP':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,86,87,89,90,91,92,93,99,101,106,108,110,112,113,115,116,117,118,119,136,138,139,140,150,155,156,157,159,160,161,163,168,170,171,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,213,214,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,315,316,318,323,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,380,381,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,448,450,451,452,453,460,461,462,463,465,469,472,473,474,475,],[-94,-158,-160,-159,-92,87,87,-93,87,-185,87,87,-42,-41,-40,-10,87,87,-13,-12,-6,87,-8,-3,-7,-19,-43,-4,214,87,-39,-38,87,-9,87,87,-39,87,-186,87,-237,-239,-235,87,-236,87,87,-249,-7,-248,-240,-246,87,-244,-250,-238,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-28,-27,87,87,87,87,87,87,87,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,87,87,87,-39,87,87,-264,87,-247,-245,-262,87,-251,87,87,87,87,-263,87,-24,-23,-21,-5,87,87,87,-39,87,87,87,87,-229,-261,-265,87,87,-243,87,-241,-20,-22,87,87,87,87,87,87,87,-39,87,87,87,87,-242,87,87,87,87,87,-234,87,87,-255,-254,-253,-14,87,87,-25,87,-257,87,-259,87,87,-26,-258,-260,-256,-252,]),'NE_OP':([86,88,90,91,92,95,97,99,101,102,104,105,106,108,109,112,113,119,135,171,187,189,190,213,214,220,299,300,301,303,304,306,307,308,309,310,311,312,313,314,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-50,-56,-8,-3,-53,-61,-46,-7,-19,209,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,-54,-55,-51,-52,-59,-57,-60,-58,-63,-62,209,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'SHORT':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[8,8,-94,-158,-127,-115,-116,-117,-111,-110,8,-1,8,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,8,8,-122,-128,-125,-124,8,-161,-120,-92,-167,-166,8,8,-153,-2,-132,8,-93,-165,8,-269,-270,8,8,8,8,8,8,8,-139,-135,8,-169,-179,-168,-237,-239,-235,-236,8,-249,-248,-240,-246,-244,-250,-238,-268,-271,8,8,8,-163,-164,8,-149,8,-136,-130,-137,-177,-176,-170,-178,8,-180,8,-264,8,-247,-245,-262,-251,-263,8,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,8,-152,-171,-174,-242,-234,-255,-254,-253,8,-257,-259,-258,-260,-256,-252,]),'RETURN':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,160,-237,-239,-235,-236,160,-249,-248,-240,-246,160,-244,-250,-238,-264,-247,-245,-262,-251,160,160,-263,-261,-265,-243,160,-241,160,-242,160,160,-234,160,160,-255,-254,-253,-257,160,-259,160,160,-258,-260,-256,-252,]),'DEC_OP':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,86,87,89,90,91,92,93,99,101,106,108,110,112,113,115,116,117,118,119,136,138,139,140,150,155,156,157,159,160,161,163,168,170,171,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,213,214,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,315,316,318,323,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,380,381,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,448,450,451,452,453,460,461,462,463,465,469,472,473,474,475,],[-94,-158,-160,-159,-92,89,89,-93,89,-185,89,89,-42,-41,-40,-10,89,89,-13,-12,-6,89,-8,-3,-7,-19,-43,-4,213,89,-39,-38,89,-9,89,89,-39,89,-186,89,-237,-239,-235,89,-236,89,89,-249,-7,-248,-240,-246,89,-244,-250,-238,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-28,-27,89,89,89,89,89,89,89,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,89,89,89,-39,89,89,-264,89,-247,-245,-262,89,-251,89,89,89,89,-263,89,-24,-23,-21,-5,89,89,89,-39,89,89,89,89,-229,-261,-265,89,89,-243,89,-241,-20,-22,89,89,89,89,89,89,89,-39,89,89,89,89,-242,89,89,89,89,89,-234,89,89,-255,-254,-253,-14,89,89,-25,89,-257,89,-259,89,89,-26,-258,-260,-256,-252,]),'FUNC_NAME':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,90,90,-93,90,-185,90,90,-42,-41,-40,90,90,90,-43,90,-39,-38,90,90,90,-39,90,-186,90,-237,-239,-235,90,-236,90,90,-249,-248,-240,-246,90,-244,-250,-238,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,90,90,90,-39,90,90,-264,90,-247,-245,-262,90,-251,90,90,90,90,-263,90,90,90,90,-39,90,90,90,90,-229,-261,-265,90,90,-243,90,-241,90,90,90,90,90,90,90,-39,90,90,90,90,-242,90,90,90,90,90,-234,90,90,-255,-254,-253,90,90,90,-257,90,-259,90,90,-258,-260,-256,-252,]),'STRINGLITERAL':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,232,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,91,91,-93,91,-185,91,91,-42,-41,-40,91,91,91,-43,91,-39,-38,91,91,91,-39,91,-186,91,-237,-239,-235,91,-236,91,91,-249,-248,-240,-246,91,-244,-250,-238,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,341,91,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,91,91,91,-39,91,91,-264,91,-247,-245,-262,91,-251,91,91,91,91,-263,91,91,91,91,-39,91,91,91,91,-229,-261,-265,91,91,-243,91,-241,91,91,91,91,91,91,91,-39,91,91,91,91,-242,91,91,91,91,91,-234,91,91,-255,-254,-253,91,91,91,-257,91,-259,91,91,-258,-260,-256,-252,]),'RESTRICT':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,50,52,56,58,62,63,64,66,67,68,69,70,71,75,77,78,79,94,98,118,128,129,130,131,136,138,140,142,143,150,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,223,224,229,233,234,235,237,254,255,259,260,262,263,267,269,278,280,281,282,283,285,291,325,327,333,334,338,339,342,346,348,351,352,364,365,369,373,376,387,395,397,402,406,407,415,431,438,444,445,447,449,460,462,472,473,474,475,],[27,27,-94,-158,-127,-115,-116,-117,-111,-110,27,-1,27,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,27,27,-122,-128,-125,-124,27,-161,-120,-92,-167,-166,27,27,27,-153,-2,-132,27,-93,-165,27,27,27,-185,-269,-270,27,27,27,27,27,27,27,-139,-135,27,27,27,-169,-179,-186,-168,-237,-239,-235,-236,27,-249,-248,-240,-246,-244,-250,-238,-268,-271,27,27,27,-163,-164,27,27,-149,27,-136,-130,-137,27,-177,-176,-170,-178,27,-180,27,-264,27,-247,-245,-262,-251,-263,27,27,27,27,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,27,27,27,27,-152,-171,-174,-242,27,-234,-255,-254,-253,27,-257,-259,-258,-260,-256,-252,]),'COMPLEX':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[38,38,-94,-158,-127,-115,-116,-117,-111,-110,38,-1,38,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,38,38,-122,-128,-125,-124,38,-161,-120,-92,-167,-166,38,38,-153,-2,-132,38,-93,-165,38,-269,-270,38,38,38,38,38,38,38,-139,-135,38,-169,-179,-168,-237,-239,-235,-236,38,-249,-248,-240,-246,-244,-250,-238,-268,-271,38,38,38,-163,-164,38,-149,38,-136,-130,-137,-177,-176,-170,-178,38,-180,38,-264,38,-247,-245,-262,-251,-263,38,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,38,-152,-171,-174,-242,-234,-255,-254,-253,38,-257,-259,-258,-260,-256,-252,]),'STATIC':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,58,62,63,66,67,68,69,71,75,77,78,79,138,142,143,150,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,203,208,223,224,229,235,255,259,260,262,263,267,269,278,280,281,282,283,285,291,327,333,334,338,339,342,348,351,352,364,365,369,373,397,402,406,407,415,438,444,445,447,460,462,472,473,474,475,],[9,9,-94,-158,-127,-115,-116,-117,-111,-110,9,-1,9,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,9,9,-122,-128,-125,-124,9,-161,-120,-92,-167,-166,9,-153,-2,-132,-93,-165,136,9,-185,-269,-270,9,9,256,-169,-179,-186,-168,-237,-239,-235,-236,9,-249,-248,-240,-246,-244,-250,-238,-268,-271,-163,-164,325,9,-149,-130,-177,-176,-170,-178,9,-180,9,-264,9,-247,-245,-262,-251,-263,389,395,9,-150,-151,-131,-172,-175,-173,-261,-265,-243,-241,433,-152,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'EQ_OP':([86,88,90,91,92,95,97,99,101,102,104,105,106,108,109,112,113,119,135,171,187,189,190,213,214,220,299,300,301,303,304,306,307,308,309,310,311,312,313,314,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-50,-56,-8,-3,-53,-61,-46,-7,-19,210,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,-54,-55,-51,-52,-59,-57,-60,-58,-63,-62,210,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'SIZEOF':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,93,93,-93,93,-185,93,93,-42,-41,-40,93,93,93,-43,93,-39,-38,93,93,93,-39,93,-186,93,-237,-239,-235,93,-236,93,93,-249,-248,-240,-246,93,-244,-250,-238,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,93,93,93,-39,93,93,-264,93,-247,-245,-262,93,-251,93,93,93,93,-263,93,93,93,93,-39,93,93,93,93,-229,-261,-265,93,93,-243,93,-241,93,93,93,93,93,93,93,-39,93,93,93,93,-242,93,93,93,93,93,-234,93,93,-255,-254,-253,93,93,93,-257,93,-259,93,93,-258,-260,-256,-252,]),'UNSIGNED':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[15,15,-94,-158,-127,-115,-116,-117,-111,-110,15,-1,15,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,15,15,-122,-128,-125,-124,15,-161,-120,-92,-167,-166,15,15,-153,-2,-132,15,-93,-165,15,-269,-270,15,15,15,15,15,15,15,-139,-135,15,-169,-179,-168,-237,-239,-235,-236,15,-249,-248,-240,-246,-244,-250,-238,-268,-271,15,15,15,-163,-164,15,-149,15,-136,-130,-137,-177,-176,-170,-178,15,-180,15,-264,15,-247,-245,-262,-251,-263,15,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,15,-152,-171,-174,-242,-234,-255,-254,-253,15,-257,-259,-258,-260,-256,-252,]),'OR_OP':([83,86,88,90,91,92,95,97,99,100,101,102,104,105,106,108,109,111,112,113,119,135,171,187,189,190,213,214,220,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,323,377,379,380,381,384,448,452,469,],[185,-10,-44,-13,-12,-6,-50,-56,-8,-68,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-69,-49,-48,-47,185,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'COLON':([3,5,6,7,8,15,16,17,18,27,28,32,33,36,37,38,39,42,48,49,50,58,63,67,70,71,72,83,86,88,90,91,92,94,95,96,97,98,99,100,101,102,104,105,106,108,109,111,112,113,114,119,120,121,132,135,141,142,143,150,151,152,166,171,180,187,189,190,192,199,213,214,220,225,226,227,229,235,238,255,259,260,262,267,288,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,321,322,323,329,330,335,338,339,342,345,347,348,351,352,368,377,379,380,381,384,388,391,392,393,394,399,400,402,406,407,420,421,424,426,429,432,435,436,437,448,452,454,455,456,459,469,470,471,],[-158,-127,-115,-116,-117,-123,-119,-160,-126,-159,-129,-118,-121,-122,-128,-125,-124,-120,-167,-166,-184,-153,-132,-165,-182,-185,-183,-70,-10,-44,-13,-12,-6,-141,-50,-72,-56,-143,-8,-68,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,-74,-9,-197,-91,239,-44,-76,-169,-179,-186,-181,-168,286,290,-89,-32,-33,-35,-140,-142,-28,-27,-34,-200,-196,-199,-149,-130,343,-177,-176,-170,-178,-180,371,-69,-49,-48,-47,-71,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,383,-73,-5,-202,-218,-198,-150,-151,-131,239,-77,-172,-175,-173,-90,-37,-36,-20,-22,-45,-209,-208,-203,-219,-201,-210,-220,-152,-171,-174,450,451,-75,-205,-207,-217,-216,-211,-221,-14,-25,-204,-206,-213,-214,-26,-212,-215,]),'VOLATILE':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,50,52,56,58,62,63,64,66,67,68,69,70,71,75,77,78,79,94,98,118,128,129,130,131,136,138,140,142,143,150,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,223,224,229,233,234,235,237,254,255,259,260,262,263,267,269,278,280,281,282,283,285,291,325,327,333,334,338,339,342,346,348,351,352,364,365,369,373,376,387,395,397,402,406,407,415,431,438,444,445,447,449,460,462,472,473,474,475,],[17,17,-94,-158,-127,-115,-116,-117,-111,-110,17,-1,17,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,17,17,-122,-128,-125,-124,17,-161,-120,-92,-167,-166,17,17,17,-153,-2,-132,17,-93,-165,17,17,17,-185,-269,-270,17,17,17,17,17,17,17,-139,-135,17,17,17,-169,-179,-186,-168,-237,-239,-235,-236,17,-249,-248,-240,-246,-244,-250,-238,-268,-271,17,17,17,-163,-164,17,17,-149,17,-136,-130,-137,17,-177,-176,-170,-178,17,-180,17,-264,17,-247,-245,-262,-251,-263,17,17,17,17,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,17,17,17,17,-152,-171,-174,-242,17,-234,-255,-254,-253,17,-257,-259,-258,-260,-256,-252,]),'$end':([2,12,26,30,40,47,62,66,75,177,182,282,438,],[-94,-1,-267,-266,0,-92,-2,-93,-269,-244,-268,-245,-234,]),'DIVIDE':([86,88,90,91,92,95,99,101,105,106,108,112,113,119,135,171,187,189,190,213,214,220,299,300,301,306,307,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,194,-8,-3,-46,-7,-19,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,194,194,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'FOR':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,162,-237,-239,-235,-236,162,-249,-248,-240,-246,162,-244,-250,-238,-264,-247,-245,-262,-251,162,162,-263,-261,-265,-243,162,-241,162,-242,162,162,-234,162,162,-255,-254,-253,-257,162,-259,162,162,-258,-260,-256,-252,]),'UNION':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[21,21,-94,-158,-127,-115,-116,-117,-111,-110,21,-1,21,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,21,21,-122,-128,-125,-124,21,-161,-120,-92,-167,-166,21,21,-153,-2,-132,21,-93,-165,21,-269,-270,21,21,21,21,21,21,21,-139,-135,21,-169,-179,-168,-237,-239,-235,-236,21,-249,-248,-240,-246,-244,-250,-238,-268,-271,21,21,21,-163,-164,21,-149,21,-136,-130,-137,-177,-176,-170,-178,21,-180,21,-264,21,-247,-245,-262,-251,-263,21,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,21,-152,-171,-174,-242,-234,-255,-254,-253,21,-257,-259,-258,-260,-256,-252,]),'EQUALS':([48,49,52,67,86,88,90,91,92,99,101,106,108,112,113,119,123,125,134,135,142,143,152,171,187,189,190,213,214,220,255,259,260,262,267,273,276,315,316,318,323,348,351,352,360,362,377,379,380,381,384,406,407,408,448,452,469,],[-167,-166,76,-165,-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,228,-11,76,245,-169,-179,-168,-7,-32,-33,-35,-28,-27,-34,-177,-176,-170,-178,-180,-230,363,-24,-23,-21,-5,-172,-175,-173,-233,-231,-37,-36,-20,-22,-45,-171,-174,-232,-14,-25,-26,]),'ELSE':([156,157,159,161,173,177,178,179,278,282,283,285,291,364,365,369,373,415,444,445,447,460,462,472,473,474,475,],[-237,-239,-235,-236,-240,-244,-250,-238,-264,-245,-262,-251,-263,-261,-265,-243,-241,-242,-255,-254,465,-257,-259,-258,-260,-256,-252,]),'LE_OP':([86,88,90,91,92,95,97,99,101,102,104,105,106,108,112,113,119,135,171,187,189,190,213,214,220,299,300,301,303,304,306,307,308,309,310,311,312,313,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-50,-56,-8,-3,-53,204,-46,-7,-19,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,-54,-55,-51,-52,-59,-57,-60,-58,204,204,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'SUB_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,241,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'TYPEID':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[28,28,-94,-158,-127,-115,-116,-117,-111,-110,28,-1,28,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,28,28,-122,-128,-125,-124,28,-161,-120,-92,-167,-166,28,28,-153,-2,-132,28,-93,-165,28,-269,-270,28,28,28,28,28,28,28,-139,-135,28,-169,-179,-168,-237,-239,-235,-236,28,-249,-248,-240,-246,-244,-250,-238,-268,-271,28,28,28,-163,-164,28,-149,28,-136,-130,-137,-177,-176,-170,-178,28,-180,28,-264,28,-247,-245,-262,-251,-263,28,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,28,-152,-171,-174,-242,-234,-255,-254,-253,28,-257,-259,-258,-260,-256,-252,]),'LBRACE':([2,21,24,31,43,47,48,49,52,58,63,66,67,76,77,78,79,142,143,152,155,156,157,159,161,163,170,172,173,175,176,177,178,179,183,255,259,260,262,267,275,278,281,282,283,285,286,290,291,324,348,351,352,353,359,363,364,365,369,371,373,378,379,385,406,407,411,414,415,416,418,438,440,442,444,445,447,453,460,461,462,463,465,472,473,474,475,],[-94,-134,57,-133,64,-92,-167,-166,78,126,128,-93,-165,155,-270,78,78,-169,-179,-168,155,-237,-239,-235,-236,78,-249,-248,-240,-246,78,-244,-250,-238,-271,-177,-176,-170,-178,-180,155,-264,-247,-245,-262,-251,78,78,-263,385,-172,-175,-173,385,155,-229,-261,-265,-243,78,-241,385,385,155,-171,-174,155,78,-242,78,78,-234,78,78,-255,-254,-253,155,-257,78,-259,78,78,-258,-260,-256,-252,]),'XOR_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,243,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'INT':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[32,32,-94,-158,-127,-115,-116,-117,-111,-110,32,-1,32,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,32,32,-122,-128,-125,-124,32,-161,-120,-92,-167,-166,32,32,-153,-2,-132,32,-93,-165,32,-269,-270,32,32,32,32,32,32,32,-139,-135,32,-169,-179,-168,-237,-239,-235,-236,32,-249,-248,-240,-246,-244,-250,-238,-268,-271,32,32,32,-163,-164,32,-149,32,-136,-130,-137,-177,-176,-170,-178,32,-180,32,-264,32,-247,-245,-262,-251,-263,32,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,32,-152,-171,-174,-242,-234,-255,-254,-253,32,-257,-259,-258,-260,-256,-252,]),'SIGNED':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[36,36,-94,-158,-127,-115,-116,-117,-111,-110,36,-1,36,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,36,36,-122,-128,-125,-124,36,-161,-120,-92,-167,-166,36,36,-153,-2,-132,36,-93,-165,36,-269,-270,36,36,36,36,36,36,36,-139,-135,36,-169,-179,-168,-237,-239,-235,-236,36,-249,-248,-240,-246,-244,-250,-238,-268,-271,36,36,36,-163,-164,36,-149,36,-136,-130,-137,-177,-176,-170,-178,36,-180,36,-264,36,-247,-245,-262,-251,-263,36,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,36,-152,-171,-174,-242,-234,-255,-254,-253,36,-257,-259,-258,-260,-256,-252,]),'CONTINUE':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,164,-237,-239,-235,-236,164,-249,-248,-240,-246,164,-244,-250,-238,-264,-247,-245,-262,-251,164,164,-263,-261,-265,-243,164,-241,164,-242,164,164,-234,164,164,-255,-254,-253,-257,164,-259,164,164,-258,-260,-256,-252,]),'MUL_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,247,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'MOD':([86,88,90,91,92,95,99,101,105,106,108,112,113,119,135,171,187,189,190,213,214,220,299,300,301,306,307,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,193,-8,-3,-46,-7,-19,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,193,193,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'RIGHT_OP':([86,88,90,91,92,95,97,99,101,102,105,106,108,112,113,119,135,171,187,189,190,213,214,220,299,300,301,303,304,306,307,308,309,310,311,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-50,198,-8,-3,-53,-46,-7,-19,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,-54,-55,-51,-52,198,198,198,198,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'I_CONSTANT':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,99,99,-93,99,-185,99,99,-42,-41,-40,99,99,99,-43,99,-39,-38,99,99,99,-39,99,-186,99,-237,-239,-235,99,-236,99,99,-249,-248,-240,-246,99,-244,-250,-238,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,99,99,99,-39,99,99,-264,99,-247,-245,-262,99,-251,99,99,99,99,-263,99,99,99,99,-39,99,99,99,99,-229,-261,-265,99,99,-243,99,-241,99,99,99,99,99,99,99,-39,99,99,99,99,-242,99,99,99,99,99,-234,99,99,-255,-254,-253,99,99,99,-257,99,-259,99,99,-258,-260,-256,-252,]),'RIGHT_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,251,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'DEFAULT':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,376,414,415,416,418,438,440,442,444,445,447,449,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,166,-237,-239,-235,-236,166,-249,-248,-240,-246,166,-244,-250,-238,-264,-247,-245,-262,-251,166,166,-263,-261,-265,-243,166,-241,421,166,-242,166,166,-234,166,166,-255,-254,-253,421,-257,166,-259,166,166,-258,-260,-256,-252,]),'CHAR':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[7,7,-94,-158,-127,-115,-116,-117,-111,-110,7,-1,7,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,7,7,-122,-128,-125,-124,7,-161,-120,-92,-167,-166,7,7,-153,-2,-132,7,-93,-165,7,-269,-270,7,7,7,7,7,7,7,-139,-135,7,-169,-179,-168,-237,-239,-235,-236,7,-249,-248,-240,-246,-244,-250,-238,-268,-271,7,7,7,-163,-164,7,-149,7,-136,-130,-137,-177,-176,-170,-178,7,-180,7,-264,7,-247,-245,-262,-251,-263,7,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,7,-152,-171,-174,-242,-234,-255,-254,-253,7,-257,-259,-258,-260,-256,-252,]),'WHILE':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,292,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,167,-237,-239,-235,-236,167,-249,-248,-240,-246,167,-244,-250,-238,-264,-247,-245,-262,-251,167,167,-263,374,-261,-265,-243,167,-241,167,-242,167,167,-234,167,167,-255,-254,-253,-257,167,-259,167,167,-258,-260,-256,-252,]),'EXTERN':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,58,62,63,66,67,69,75,77,78,79,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,203,208,224,229,235,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,348,351,352,364,365,369,373,402,406,407,415,438,444,445,447,460,462,472,473,474,475,],[10,10,-94,-158,-127,-115,-116,-117,-111,-110,10,-1,10,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,10,10,-122,-128,-125,-124,10,-161,-120,-92,-167,-166,10,-153,-2,-132,-93,-165,10,-269,-270,10,10,-169,-179,-168,-237,-239,-235,-236,10,-249,-248,-240,-246,-244,-250,-238,-268,-271,-163,-164,10,-149,-130,-177,-176,-170,-178,10,-180,10,-264,10,-247,-245,-262,-251,-263,10,-150,-151,-131,-172,-175,-173,-261,-265,-243,-241,-152,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'GT_OP':([86,88,90,91,92,95,97,99,101,102,104,105,106,108,112,113,119,135,171,187,189,190,213,214,220,299,300,301,303,304,306,307,308,309,310,311,312,313,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-50,-56,-8,-3,-53,207,-46,-7,-19,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,-54,-55,-51,-52,-59,-57,-60,-58,207,207,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'MOD_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,242,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'CASE':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,168,-237,-239,-235,-236,168,-249,-248,-240,-246,168,-244,-250,-238,-264,-247,-245,-262,-251,168,168,-263,-261,-265,-243,168,-241,168,-242,168,168,-234,168,168,-255,-254,-253,-257,168,-259,168,168,-258,-260,-256,-252,]),'LAND':([83,86,88,90,91,92,95,96,97,99,100,101,102,104,105,106,108,109,111,112,113,119,135,171,187,189,190,213,214,220,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,322,323,377,379,380,381,384,448,452,469,],[-70,-10,-44,-13,-12,-6,-50,196,-56,-8,-68,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-69,-49,-48,-47,-71,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,196,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'REGISTER':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,58,62,63,66,67,69,75,77,78,79,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,203,208,224,229,235,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,348,351,352,364,365,369,373,402,406,407,415,438,444,445,447,460,462,472,473,474,475,],[14,14,-94,-158,-127,-115,-116,-117,-111,-110,14,-1,14,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,14,14,-122,-128,-125,-124,14,-161,-120,-92,-167,-166,14,-153,-2,-132,-93,-165,14,-269,-270,14,14,-169,-179,-168,-237,-239,-235,-236,14,-249,-248,-240,-246,-244,-250,-238,-268,-271,-163,-164,14,-149,-130,-177,-176,-170,-178,14,-180,14,-264,14,-247,-245,-262,-251,-263,14,-150,-151,-131,-172,-175,-173,-261,-265,-243,-241,-152,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'SWITCH':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,169,-237,-239,-235,-236,169,-249,-248,-240,-246,169,-244,-250,-238,-264,-247,-245,-262,-251,169,169,-263,-261,-265,-243,169,-241,169,-242,169,169,-234,169,169,-255,-254,-253,-257,169,-259,169,169,-258,-260,-256,-252,]),'AND_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,246,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'IDENTIFIER':([1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,24,25,27,28,31,32,33,34,35,36,37,38,39,41,42,43,44,46,47,50,51,54,55,56,57,58,59,60,61,63,65,66,68,69,70,71,72,74,76,78,81,82,84,87,89,93,94,98,110,115,116,117,118,126,132,136,138,139,140,147,150,151,155,156,157,158,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,215,216,217,218,219,223,228,229,230,235,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,263,266,268,271,274,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,338,339,340,342,343,345,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,402,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-96,-94,-158,48,-127,-115,-116,-117,-111,-110,-102,-98,-114,-123,-119,-160,-126,-109,-162,-134,-113,58,-112,-159,-129,-133,-118,-121,-100,-104,-122,-128,-125,-124,-161,-120,63,-95,48,-92,-184,48,-101,-97,106,125,-153,106,-99,-103,-132,48,-93,106,144,-182,-185,-183,48,106,171,-42,-41,-40,106,106,106,-141,-143,-43,106,-39,-38,106,125,48,106,106,-39,106,48,-186,-181,106,-237,-239,277,-235,106,-236,171,106,-249,-248,-240,-246,171,-244,-250,-238,106,106,106,106,-140,106,106,106,106,106,106,-142,106,106,106,-163,106,106,106,106,-164,106,106,106,315,316,106,106,106,106,106,106,-149,125,-130,106,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,106,106,106,-39,48,48,354,106,360,106,-264,106,-247,-245,-262,106,-251,171,106,106,171,-263,106,106,106,106,-39,106,-150,-151,125,-131,106,48,106,106,-229,-261,-265,106,106,-243,171,-241,106,106,106,106,106,106,106,-39,-152,106,106,106,171,-242,171,106,171,106,106,-234,171,171,-255,-254,-253,106,106,106,-257,171,-259,171,171,-258,-260,-256,-252,]),'ADD_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,250,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'GE_OP':([86,88,90,91,92,95,97,99,101,102,104,105,106,108,112,113,119,135,171,187,189,190,213,214,220,299,300,301,303,304,306,307,308,309,310,311,312,313,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-50,-56,-8,-3,-53,206,-46,-7,-19,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,-49,-48,-47,-54,-55,-51,-52,-59,-57,-60,-58,206,206,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'ALIGNAS':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,58,62,63,66,67,69,75,77,78,79,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,203,208,224,229,235,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,348,351,352,364,365,369,373,402,406,407,415,438,444,445,447,460,462,472,473,474,475,],[23,23,-94,-158,-127,-115,-116,-117,-111,-110,23,-1,23,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,23,23,-122,-128,-125,-124,23,-161,-120,-92,-167,-166,23,-153,-2,-132,-93,-165,23,-269,-270,23,23,-169,-179,-168,-237,-239,-235,-236,23,-249,-248,-240,-246,-244,-250,-238,-268,-271,-163,-164,23,-149,-130,-177,-176,-170,-178,23,-180,23,-264,23,-247,-245,-262,-251,-263,23,-150,-151,-131,-172,-175,-173,-261,-265,-243,-241,-152,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'STATIC_ASSERT':([0,2,12,26,30,40,47,48,49,52,62,64,66,67,75,77,78,79,128,129,130,131,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,233,234,237,255,259,260,262,267,278,280,281,282,283,285,291,346,348,351,352,364,365,369,373,406,407,415,438,444,445,447,460,462,472,473,474,475,],[29,-94,-1,-267,-266,29,-92,-167,-166,29,-2,29,-93,-165,-269,-270,29,29,29,29,-139,-135,-169,-179,-168,-237,-239,-235,-236,29,-249,-248,-240,-246,-244,-250,-238,-268,-271,29,-136,-137,-177,-176,-170,-178,-180,-264,29,-247,-245,-262,-251,-263,-138,-172,-175,-173,-261,-265,-243,-241,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'CONDOP':([83,86,88,90,91,92,95,96,97,99,100,101,102,104,105,106,108,109,111,112,113,114,119,135,171,187,189,190,213,214,220,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,322,323,377,379,380,381,384,448,452,469,],[-70,-10,-44,-13,-12,-6,-50,-72,-56,-8,-68,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,218,-9,-44,-7,-32,-33,-35,-28,-27,-34,-69,-49,-48,-47,-71,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,-73,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'OR_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,244,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'BREAK':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,174,-237,-239,-235,-236,174,-249,-248,-240,-246,174,-244,-250,-238,-264,-247,-245,-262,-251,174,174,-263,-261,-265,-243,174,-241,174,-242,174,174,-234,174,174,-255,-254,-253,-257,174,-259,174,174,-258,-260,-256,-252,]),'BOOL':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[39,39,-94,-158,-127,-115,-116,-117,-111,-110,39,-1,39,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,39,39,-122,-128,-125,-124,39,-161,-120,-92,-167,-166,39,39,-153,-2,-132,39,-93,-165,39,-269,-270,39,39,39,39,39,39,39,-139,-135,39,-169,-179,-168,-237,-239,-235,-236,39,-249,-248,-240,-246,-244,-250,-238,-268,-271,39,39,39,-163,-164,39,-149,39,-136,-130,-137,-177,-176,-170,-178,39,-180,39,-264,39,-247,-245,-262,-251,-263,39,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,39,-152,-171,-174,-242,-234,-255,-254,-253,39,-257,-259,-258,-260,-256,-252,]),'INLINE':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,58,62,63,66,67,69,75,77,78,79,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,203,208,224,229,235,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,348,351,352,364,365,369,373,402,406,407,415,438,444,445,447,460,462,472,473,474,475,],[41,41,-94,-158,-127,-115,-116,-117,-111,-110,41,-1,41,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,41,41,-122,-128,-125,-124,41,-161,-120,-92,-167,-166,41,-153,-2,-132,-93,-165,41,-269,-270,41,41,-169,-179,-168,-237,-239,-235,-236,41,-249,-248,-240,-246,-244,-250,-238,-268,-271,-163,-164,41,-149,-130,-177,-176,-170,-178,41,-180,41,-264,41,-247,-245,-262,-251,-263,41,-150,-151,-131,-172,-175,-173,-261,-265,-243,-241,-152,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'DO':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,176,-237,-239,-235,-236,176,-249,-248,-240,-246,176,-244,-250,-238,-264,-247,-245,-262,-251,176,176,-263,-261,-265,-243,176,-241,176,-242,176,176,-234,176,176,-255,-254,-253,-257,176,-259,176,176,-258,-260,-256,-252,]),'LNOT':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,110,110,-93,110,-185,110,110,-42,-41,-40,110,110,110,-43,110,-39,-38,110,110,110,-39,110,-186,110,-237,-239,-235,110,-236,110,110,-249,-248,-240,-246,110,-244,-250,-238,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,110,110,110,-39,110,110,-264,110,-247,-245,-262,110,-251,110,110,110,110,-263,110,110,110,110,-39,110,110,110,110,-229,-261,-265,110,110,-243,110,-241,110,110,110,110,110,110,110,-39,110,110,110,110,-242,110,110,110,110,110,-234,110,110,-255,-254,-253,110,110,110,-257,110,-259,110,110,-258,-260,-256,-252,]),'CONST':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,50,52,56,58,62,63,64,66,67,68,69,70,71,75,77,78,79,94,98,118,128,129,130,131,136,138,140,142,143,150,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,223,224,229,233,234,235,237,254,255,259,260,262,263,267,269,278,280,281,282,283,285,291,325,327,333,334,338,339,342,346,348,351,352,364,365,369,373,376,387,395,397,402,406,407,415,431,438,444,445,447,449,460,462,472,473,474,475,],[3,3,-94,-158,-127,-115,-116,-117,-111,-110,3,-1,3,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,3,3,-122,-128,-125,-124,3,-161,-120,-92,-167,-166,3,3,3,-153,-2,-132,3,-93,-165,3,3,3,-185,-269,-270,3,3,3,3,3,3,3,-139,-135,3,3,3,-169,-179,-186,-168,-237,-239,-235,-236,3,-249,-248,-240,-246,-244,-250,-238,-268,-271,3,3,3,-163,-164,3,3,-149,3,-136,-130,-137,3,-177,-176,-170,-178,3,-180,3,-264,3,-247,-245,-262,-251,-263,3,3,3,3,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,3,3,3,3,-152,-171,-174,-242,3,-234,-255,-254,-253,3,-257,-259,-258,-260,-256,-252,]),'LOR':([83,86,88,90,91,92,95,96,97,99,100,101,102,104,105,106,108,109,111,112,113,114,119,135,171,187,189,190,213,214,220,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,322,323,377,379,380,381,384,448,452,469,],[-70,-10,-44,-13,-12,-6,-50,-72,-56,-8,-68,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,219,-9,-44,-7,-32,-33,-35,-28,-27,-34,-69,-49,-48,-47,-71,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,-73,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'GOTO':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,158,-237,-239,-235,-236,158,-249,-248,-240,-246,158,-244,-250,-238,-264,-247,-245,-262,-251,158,158,-263,-261,-265,-243,158,-241,158,-242,158,158,-234,158,158,-255,-254,-253,-257,158,-259,158,158,-258,-260,-256,-252,]),'SEMI':([1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,25,27,28,32,33,34,35,36,37,38,39,41,42,44,45,47,48,49,52,53,54,55,58,60,61,63,66,67,74,78,83,86,88,90,91,92,94,95,96,97,98,99,100,101,102,104,105,106,108,109,111,112,113,114,119,121,132,133,134,135,141,142,143,152,153,154,156,157,159,160,161,163,164,165,170,171,172,173,174,175,176,177,178,179,180,187,189,190,192,199,203,208,213,214,220,229,235,236,238,240,255,259,260,262,267,277,278,279,280,281,282,283,285,286,290,291,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,322,323,338,339,342,344,347,348,351,352,358,364,365,366,367,368,369,371,373,377,379,380,381,384,402,403,404,405,406,407,410,414,415,416,418,424,438,440,442,444,445,447,448,452,460,461,462,463,464,465,469,472,473,474,475,],[-96,-94,-158,47,-127,-115,-116,-117,-111,-110,-102,-98,-114,-123,-119,-160,-126,-109,-162,-113,-112,-159,-129,-118,-121,-100,-104,-122,-128,-125,-124,-161,-120,-95,66,-92,-167,-166,-108,-105,-101,-97,-153,-99,-103,-132,-93,-165,47,178,-70,-10,-44,-13,-12,-6,-141,-50,-72,-56,-143,-8,-68,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,-74,-9,-91,237,-106,-108,-44,-76,-169,-179,-168,-107,-224,-237,-239,-235,278,-236,178,283,285,-249,-7,-248,-240,291,-246,178,-244,-250,-238,-89,-32,-33,-35,-140,-142,-163,-164,-28,-27,-34,-149,-130,-144,-148,346,-177,-176,-170,-178,-180,364,-264,365,178,-247,-245,-262,-251,178,178,-263,-69,-49,-48,-47,-71,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,-73,-5,-150,-151,-131,-146,-77,-172,-175,-173,-222,-261,-265,178,178,-90,-243,178,-241,-37,-36,-20,-22,-45,-152,438,-147,-145,-171,-174,-223,178,-242,178,178,-75,-234,178,178,-255,-254,-253,-14,-25,-257,178,-259,178,474,178,-26,-258,-260,-256,-252,]),'COMMA':([1,3,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,25,27,28,32,33,34,35,36,37,38,39,41,42,44,45,48,49,50,52,53,54,55,58,60,61,63,67,70,71,72,83,86,88,90,91,92,95,96,97,99,100,101,102,104,105,106,108,109,111,112,113,114,119,121,122,123,124,125,127,133,134,135,141,142,143,144,146,147,148,149,150,151,152,153,154,165,171,180,187,189,190,203,208,213,214,220,221,225,229,231,235,236,238,240,255,259,260,262,264,265,266,267,270,272,279,294,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,330,335,336,337,338,339,342,344,347,348,351,352,354,356,358,361,368,370,372,375,377,379,380,381,384,388,391,392,393,394,399,400,402,404,405,406,407,409,410,419,422,423,424,425,426,429,432,435,436,437,439,441,443,446,448,452,454,455,456,459,466,467,468,469,470,471,],[-96,-158,-127,-115,-116,-117,-111,-110,-102,-98,-114,-123,-119,-160,-126,-109,-162,-113,-112,-159,-129,-118,-121,-100,-104,-122,-128,-125,-124,-161,-120,-95,65,-167,-166,-184,-108,-105,-101,-97,-153,-99,-103,-132,-165,-182,-185,-183,-70,-10,-44,-13,-12,-6,-50,-72,-56,-8,-68,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,-74,-9,-91,-154,-157,230,-11,232,-106,-108,-44,-76,-169,-179,-194,-189,-193,268,269,-186,-181,-168,-107,-224,284,-7,-89,-32,-33,-35,-163,-164,-28,-27,-34,284,-200,-149,340,-130,-144,-148,345,-177,-176,-170,-178,-192,-191,-199,-180,-226,359,284,376,-69,-49,-48,-47,-71,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,284,-21,-29,382,284,-73,-5,-202,-218,-198,-156,-155,-150,-151,-131,-146,-77,-172,-175,-173,-195,-190,-222,-225,-90,284,284,284,-37,-36,-20,-22,-45,-209,-208,-203,-219,-201,-210,-220,-152,-147,-145,-171,-174,-228,-223,449,-15,-30,-75,453,-205,-207,-217,-216,-211,-221,-227,284,284,284,-14,-25,-204,-206,-213,-214,-16,-17,-18,-26,-212,-215,]),'PTR_OP':([86,90,91,92,99,101,106,108,112,113,119,171,213,214,315,316,318,323,380,381,448,452,469,],[-10,-13,-12,-6,-8,-3,-7,-19,-4,212,-9,-7,-28,-27,-24,-23,-21,-5,-20,-22,-14,-25,-26,]),'IMAGINARY':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[18,18,-94,-158,-127,-115,-116,-117,-111,-110,18,-1,18,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,18,18,-122,-128,-125,-124,18,-161,-120,-92,-167,-166,18,18,-153,-2,-132,18,-93,-165,18,-269,-270,18,18,18,18,18,18,18,-139,-135,18,-169,-179,-168,-237,-239,-235,-236,18,-249,-248,-240,-246,-244,-250,-238,-268,-271,18,18,18,-163,-164,18,-149,18,-136,-130,-137,-177,-176,-170,-178,18,-180,18,-264,18,-247,-245,-262,-251,-263,18,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,18,-152,-171,-174,-242,-234,-255,-254,-253,18,-257,-259,-258,-260,-256,-252,]),'CCONST':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,86,86,-93,86,-185,86,86,-42,-41,-40,86,86,86,-43,86,-39,-38,86,86,86,-39,86,-186,86,-237,-239,-235,86,-236,86,86,-249,-248,-240,-246,86,-244,-250,-238,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,86,86,86,-39,86,86,-264,86,-247,-245,-262,86,-251,86,86,86,86,-263,86,86,86,86,-39,86,86,86,86,-229,-261,-265,86,86,-243,86,-241,86,86,86,86,86,86,86,-39,86,86,86,86,-242,86,86,86,86,86,-234,86,86,-255,-254,-253,86,86,86,-257,86,-259,86,86,-258,-260,-256,-252,]),'TYPEDEF':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,58,62,63,66,67,69,75,77,78,79,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,203,208,224,229,235,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,348,351,352,364,365,369,373,402,406,407,415,438,444,445,447,460,462,472,473,474,475,],[19,19,-94,-158,-127,-115,-116,-117,-111,-110,19,-1,19,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,19,19,-122,-128,-125,-124,19,-161,-120,-92,-167,-166,19,-153,-2,-132,-93,-165,19,-269,-270,19,19,-169,-179,-168,-237,-239,-235,-236,19,-249,-248,-240,-246,-244,-250,-238,-268,-271,-163,-164,19,-149,-130,-177,-176,-170,-178,19,-180,19,-264,19,-247,-245,-262,-251,-263,19,-150,-151,-131,-172,-175,-173,-261,-265,-243,-241,-152,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'XOR':([86,88,90,91,92,95,97,99,100,101,102,104,105,106,108,109,111,112,113,119,135,171,187,189,190,213,214,220,295,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-50,-56,-8,200,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,-9,-44,-7,-32,-33,-35,-28,-27,-34,200,-49,-48,-47,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'NORETURN':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,58,62,63,66,67,69,75,77,78,79,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,203,208,224,229,235,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,348,351,352,364,365,369,373,402,406,407,415,438,444,445,447,460,462,472,473,474,475,],[20,20,-94,-158,-127,-115,-116,-117,-111,-110,20,-1,20,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,20,20,-122,-128,-125,-124,20,-161,-120,-92,-167,-166,20,-153,-2,-132,-93,-165,20,-269,-270,20,20,-169,-179,-168,-237,-239,-235,-236,20,-249,-248,-240,-246,-244,-250,-238,-268,-271,-163,-164,20,-149,-130,-177,-176,-170,-178,20,-180,20,-264,20,-247,-245,-262,-251,-263,20,-150,-151,-131,-172,-175,-173,-261,-265,-243,-241,-152,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'AUTO':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,58,62,63,66,67,69,75,77,78,79,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,203,208,224,229,235,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,348,351,352,364,365,369,373,402,406,407,415,438,444,445,447,460,462,472,473,474,475,],[22,22,-94,-158,-127,-115,-116,-117,-111,-110,22,-1,22,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,22,22,-122,-128,-125,-124,22,-161,-120,-92,-167,-166,22,-153,-2,-132,-93,-165,22,-269,-270,22,22,-169,-179,-168,-237,-239,-235,-236,22,-249,-248,-240,-246,-244,-250,-238,-268,-271,-163,-164,22,-149,-130,-177,-176,-170,-178,22,-180,22,-264,22,-247,-245,-262,-251,-263,22,-150,-151,-131,-172,-175,-173,-261,-265,-243,-241,-152,-171,-174,-242,-234,-255,-254,-253,-257,-259,-258,-260,-256,-252,]),'TIMES':([1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,25,27,28,32,33,34,35,36,37,38,39,41,42,44,47,50,51,54,55,56,58,59,60,61,63,65,66,68,70,71,74,76,78,81,82,84,86,87,88,89,90,91,92,93,94,95,98,99,101,105,106,108,110,112,113,115,116,117,118,119,120,132,135,136,138,139,140,147,150,155,156,157,159,160,161,163,168,170,171,172,173,175,176,177,178,179,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,216,217,218,219,220,223,224,228,229,235,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,263,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,299,300,301,306,307,315,316,318,323,324,325,327,328,333,338,339,342,343,345,353,359,363,364,365,366,367,369,371,373,377,379,380,381,382,383,384,385,387,389,395,397,398,402,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,448,450,451,452,453,460,461,462,463,465,469,472,473,474,475,],[-96,-94,-158,50,-127,-115,-116,-117,-111,-110,-102,-98,-114,-123,-119,-160,-126,-109,-162,-113,-112,-159,-129,-118,-121,-100,-104,-122,-128,-125,-124,-161,-120,-95,-92,50,50,-101,-97,116,-153,116,-99,-103,-132,50,-93,139,50,-185,50,116,116,-42,-41,-40,-10,116,-44,116,-13,-12,-6,116,-141,195,-143,-8,-3,-46,-7,-19,-43,-4,-31,116,-39,-38,116,-9,50,50,-44,116,258,-39,116,50,-186,116,-237,-239,-235,116,-236,116,116,-249,-7,-248,-240,-246,116,-244,-250,-238,116,116,-32,116,-33,-35,116,-140,116,116,116,116,116,116,-142,116,116,116,-163,116,116,116,116,-164,116,116,116,-28,-27,116,116,116,116,-34,328,50,116,-149,-130,116,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,116,116,116,-39,50,116,116,-264,116,-247,-245,-262,116,-251,116,116,116,116,-263,116,-49,-48,-47,195,195,-24,-23,-21,-5,116,116,116,-39,398,-150,-151,-131,116,50,116,116,-229,-261,-265,116,116,-243,116,-241,-37,-36,-20,-22,116,116,-45,116,116,116,116,116,-39,-152,116,116,116,116,-242,116,116,116,116,116,-234,116,116,-255,-254,-253,-14,116,116,-25,116,-257,116,-259,116,116,-26,-258,-260,-256,-252,]),'AND_OP':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,86,87,88,89,90,91,92,93,95,97,99,101,102,104,105,106,108,109,110,111,112,113,115,116,117,118,119,135,136,138,139,140,150,155,156,157,159,160,161,163,168,170,171,172,173,175,176,177,178,179,184,185,187,188,189,190,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,213,214,216,217,218,219,220,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,323,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,377,379,380,381,382,383,384,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,448,450,451,452,453,460,461,462,463,465,469,472,473,474,475,],[-94,-158,-160,-159,-92,117,117,-93,117,-185,117,117,-42,-41,-40,-10,117,-44,117,-13,-12,-6,117,-50,-56,-8,-3,-53,-61,-46,-7,-19,-64,-43,211,-4,-31,117,-39,-38,117,-9,-44,117,117,-39,117,-186,117,-237,-239,-235,117,-236,117,117,-249,-7,-248,-240,-246,117,-244,-250,-238,117,117,-32,117,-33,-35,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-28,-27,117,117,117,117,-34,117,117,117,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,117,117,117,-39,117,117,-264,117,-247,-245,-262,117,-251,117,117,117,117,-263,117,-49,-48,-47,-54,-55,211,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,-21,-5,117,117,117,-39,117,117,117,117,-229,-261,-265,117,117,-243,117,-241,-37,-36,-20,-22,117,117,-45,117,117,117,117,117,-39,117,117,117,117,-242,117,117,117,117,117,-234,117,117,-255,-254,-253,-14,117,117,-25,117,-257,117,-259,117,117,-26,-258,-260,-256,-252,]),'LPAREN':([1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,23,25,27,28,29,32,33,34,35,36,37,38,39,41,42,44,46,47,48,49,50,51,54,55,56,58,59,60,61,63,65,66,67,68,70,71,72,74,76,78,80,81,82,84,85,86,87,89,90,91,92,93,94,98,99,101,106,108,110,112,113,115,116,117,118,119,120,132,136,138,139,140,142,143,147,150,151,152,155,156,157,159,160,161,162,163,167,168,169,170,171,172,173,175,176,177,178,179,181,184,185,188,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,216,217,218,219,223,224,225,227,228,229,235,239,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,258,259,260,262,263,266,267,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,315,316,318,323,324,325,327,328,329,330,333,335,338,339,342,343,345,348,351,352,353,359,363,364,365,366,367,369,371,373,374,380,381,382,383,385,387,388,389,391,392,393,394,395,397,398,399,400,402,406,407,411,412,413,414,415,416,417,418,426,429,431,432,433,435,436,437,438,440,442,444,445,447,448,450,451,452,453,454,455,456,459,460,461,462,463,465,469,470,471,472,473,474,475,],[-96,-94,-158,51,-127,-115,-116,-117,-111,-110,-102,-98,-114,-123,-119,-160,-126,-109,-162,-113,56,-112,-159,-129,59,-118,-121,-100,-104,-122,-128,-125,-124,-161,-120,-95,51,-92,-167,69,-184,51,-101,-97,118,-153,118,-99,-103,-132,51,-93,69,140,-182,-185,-183,51,140,140,184,-42,-41,-40,186,-10,188,188,-13,-12,-6,191,-141,-143,-8,-3,-7,-19,-43,-4,217,118,-39,-38,140,-9,224,51,140,140,-39,140,-169,-179,263,-186,-181,-168,140,-237,-239,-235,140,-236,280,140,287,118,289,-249,-7,-248,-240,-246,140,-244,-250,-238,293,140,118,140,140,-140,118,118,118,118,118,118,-142,118,118,118,-163,118,118,118,118,-164,118,118,118,-28,-27,140,140,140,118,140,224,334,224,118,-149,-130,118,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,140,140,-177,140,-39,-176,-170,-178,263,263,-180,118,140,-264,140,-247,-245,-262,140,-251,140,140,140,140,-263,140,-24,-23,-21,-5,118,140,140,-39,-202,-218,140,334,-150,-151,-131,118,51,-172,-175,-173,118,140,-229,-261,-265,140,140,-243,140,-241,417,-20,-22,140,118,140,140,-209,140,-208,-203,-219,-201,140,140,-39,-210,-220,-152,-171,-174,140,140,140,140,-242,140,140,140,-205,-207,140,-217,140,-216,-211,-221,-234,140,140,-255,-254,-253,-14,140,140,-25,140,-204,-206,-213,-214,-257,140,-259,140,140,-26,-212,-215,-258,-260,-256,-252,]),'F_CONSTANT':([2,3,17,27,47,56,59,66,68,71,76,78,81,82,84,87,89,93,110,115,116,117,118,136,138,139,140,150,155,156,157,159,160,161,163,168,170,172,173,175,176,177,178,179,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,241,242,243,244,245,246,247,248,249,250,251,252,254,256,258,271,275,278,280,281,282,283,284,285,286,287,289,290,291,293,324,325,327,328,333,343,353,359,363,364,365,366,367,369,371,373,382,383,385,387,389,395,397,398,411,412,413,414,415,416,417,418,431,433,438,440,442,444,445,447,450,451,453,460,461,462,463,465,472,473,474,475,],[-94,-158,-160,-159,-92,119,119,-93,119,-185,119,119,-42,-41,-40,119,119,119,-43,119,-39,-38,119,119,119,-39,119,-186,119,-237,-239,-235,119,-236,119,119,-249,-248,-240,-246,119,-244,-250,-238,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-83,-81,-87,-88,-78,-86,-79,-80,-84,-82,-85,119,119,119,-39,119,119,-264,119,-247,-245,-262,119,-251,119,119,119,119,-263,119,119,119,119,-39,119,119,119,119,-229,-261,-265,119,119,-243,119,-241,119,119,119,119,119,119,119,-39,119,119,119,119,-242,119,119,119,119,119,-234,119,119,-255,-254,-253,119,119,119,-257,119,-259,119,119,-258,-260,-256,-252,]),'LEFT_ASSIGN':([86,88,90,91,92,99,101,106,108,112,113,119,135,171,187,189,190,213,214,220,315,316,318,323,377,379,380,381,384,448,452,469,],[-10,-44,-13,-12,-6,-8,-3,-7,-19,-4,-31,-9,249,-7,-32,-33,-35,-28,-27,-34,-24,-23,-21,-5,-37,-36,-20,-22,-45,-14,-25,-26,]),'IF':([2,47,66,78,156,157,159,161,163,170,172,173,175,176,177,178,179,278,281,282,283,285,286,290,291,364,365,369,371,373,414,415,416,418,438,440,442,444,445,447,460,461,462,463,465,472,473,474,475,],[-94,-92,-93,181,-237,-239,-235,-236,181,-249,-248,-240,-246,181,-244,-250,-238,-264,-247,-245,-262,-251,181,181,-263,-261,-265,-243,181,-241,181,-242,181,181,-234,181,181,-255,-254,-253,-257,181,-259,181,181,-258,-260,-256,-252,]),'STRUCT':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[31,31,-94,-158,-127,-115,-116,-117,-111,-110,31,-1,31,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,31,31,-122,-128,-125,-124,31,-161,-120,-92,-167,-166,31,31,-153,-2,-132,31,-93,-165,31,-269,-270,31,31,31,31,31,31,31,-139,-135,31,-169,-179,-168,-237,-239,-235,-236,31,-249,-248,-240,-246,-244,-250,-238,-268,-271,31,31,31,-163,-164,31,-149,31,-136,-130,-137,-177,-176,-170,-178,31,-180,31,-264,31,-247,-245,-262,-251,-263,31,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,31,-152,-171,-174,-242,-234,-255,-254,-253,31,-257,-259,-258,-260,-256,-252,]),'FLOAT':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,56,58,62,63,64,66,67,69,75,77,78,79,94,98,118,128,129,130,131,140,142,143,152,156,157,159,161,163,170,172,173,175,177,178,179,182,183,186,188,191,203,208,224,229,233,234,235,237,255,259,260,262,263,267,269,278,280,281,282,283,285,291,334,338,339,342,346,348,351,352,364,365,369,373,376,402,406,407,415,438,444,445,447,449,460,462,472,473,474,475,],[42,42,-94,-158,-127,-115,-116,-117,-111,-110,42,-1,42,-114,-123,-119,-160,-126,-109,-162,-113,-112,-267,-159,-129,-266,-118,-121,42,42,-122,-128,-125,-124,42,-161,-120,-92,-167,-166,42,42,-153,-2,-132,42,-93,-165,42,-269,-270,42,42,42,42,42,42,42,-139,-135,42,-169,-179,-168,-237,-239,-235,-236,42,-249,-248,-240,-246,-244,-250,-238,-268,-271,42,42,42,-163,-164,42,-149,42,-136,-130,-137,-177,-176,-170,-178,42,-180,42,-264,42,-247,-245,-262,-251,-263,42,-150,-151,-131,-138,-172,-175,-173,-261,-265,-243,-241,42,-152,-171,-174,-242,-234,-255,-254,-253,42,-257,-259,-258,-260,-256,-252,]),'RBRACKET':([3,17,27,68,71,83,86,88,90,91,92,95,96,97,99,100,101,102,104,105,106,108,109,111,112,113,114,119,121,135,137,138,139,141,150,180,187,189,190,213,214,220,223,253,257,258,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,322,323,326,327,328,333,347,349,350,357,368,377,379,380,381,384,386,390,396,397,398,424,427,428,430,434,448,452,457,458,469,],[-158,-160,-159,142,-185,-70,-10,-44,-13,-12,-6,-50,-72,-56,-8,-68,-3,-53,-61,-46,-7,-19,-64,-66,-4,-31,-74,-9,-91,-44,255,259,260,-76,-186,-89,-32,-33,-35,-28,-27,-34,329,348,351,352,-69,-49,-48,-47,-71,-54,-55,-67,-51,-52,-59,-57,-60,-58,-63,-62,-65,-24,-23,380,-21,-73,-5,388,391,392,399,-77,406,407,408,-90,-37,-36,-20,-22,-45,426,429,432,435,436,-75,454,455,456,459,-14,-25,470,471,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'storage_class_specifier':([0,1,11,13,34,35,40,52,69,78,79,163,224,263,269,280,334,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'multiplicative_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,185,188,191,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,306,307,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'static_assert_declaration':([0,40,52,64,78,79,128,129,163,233,280,],[2,2,2,130,2,2,130,130,2,130,2,]),'constant':([56,59,68,76,78,87,89,93,115,118,136,138,140,155,160,163,168,176,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,324,325,327,333,343,353,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'unary_expression':([56,59,68,76,78,87,89,93,115,118,136,138,140,155,160,163,168,176,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,324,325,327,333,343,353,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[88,88,135,135,135,187,189,190,88,135,135,135,135,135,135,135,88,135,135,88,135,135,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,135,135,135,88,135,88,88,135,135,135,88,135,135,135,135,135,135,135,135,88,135,135,135,88,88,135,135,135,135,135,88,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'conditional_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,188,191,216,217,218,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[121,121,141,141,141,141,141,141,141,141,141,141,121,141,141,141,141,141,141,141,141,121,121,141,141,141,121,141,141,141,141,141,141,141,141,141,141,141,121,141,141,141,141,141,424,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'abstract_declarator':([120,147,224,263,],[226,264,332,332,]),'struct_or_union_specifier':([0,1,11,13,34,35,40,52,56,64,69,78,79,94,98,118,128,129,140,163,186,188,191,224,233,263,269,280,334,376,449,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'exclusive_or_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,185,188,191,196,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,295,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'identifier_list':([69,],[148,]),'init_declarator_list':([4,74,],[45,45,]),'generic_selection':([56,59,68,76,78,87,89,93,115,118,136,138,140,155,160,163,168,176,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,324,325,327,333,343,353,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'enumerator_list':([57,126,],[124,231,]),'assignment_operator':([135,],[252,]),'struct_declaration_list':([64,128,],[129,233,]),'struct_declaration':([64,128,129,233,],[131,131,234,234,]),'declaration_list':([52,],[79,]),'pointer':([4,50,51,65,70,74,120,132,147,224,263,345,],[46,72,46,46,151,46,227,46,266,227,266,46,]),'and_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,185,188,191,196,200,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,305,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'assignment_expression':([68,76,78,118,136,138,140,155,160,163,176,184,188,191,216,217,218,223,252,254,256,275,280,284,286,287,289,290,293,325,327,333,359,366,367,371,382,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[137,154,180,180,253,257,180,154,180,180,180,294,180,180,180,319,180,326,347,349,350,154,180,368,180,180,180,180,180,386,390,396,154,180,180,180,423,154,427,428,430,434,154,180,180,180,180,180,180,457,458,180,180,467,468,154,180,180,180,]),'external_declaration':([0,40,],[12,62,]),'type_specifier':([0,1,11,13,34,35,40,52,56,64,69,78,79,94,98,118,128,129,140,163,186,188,191,224,233,263,269,280,334,376,449,],[13,13,13,13,13,13,13,13,94,94,13,13,13,94,94,94,94,94,94,13,94,94,94,13,94,13,13,13,13,94,94,]),'compound_statement':([52,78,79,163,176,286,290,371,414,416,418,440,442,461,463,465,],[75,161,182,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'inclusive_or_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,188,191,196,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,302,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'iteration_statement':([78,163,176,286,290,371,414,416,418,440,442,461,463,465,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'type_name':([56,118,140,186,188,191,376,449,],[103,222,261,296,297,298,420,420,]),'postfix_expression':([56,59,68,76,78,87,89,93,115,118,136,138,140,155,160,163,168,176,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,324,325,327,333,343,353,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'block_item_list':([78,],[163,]),'generic_association':([376,449,],[422,466,]),'parameter_type_list':([69,224,263,334,],[145,331,331,401,]),'additive_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,185,188,191,196,197,198,200,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,303,304,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'expression_statement':([78,163,176,280,286,290,366,367,371,414,416,418,440,442,461,463,465,],[156,156,156,366,156,156,412,413,156,156,156,156,156,156,156,156,156,]),'unary_operator':([56,59,68,76,78,87,89,93,115,118,136,138,140,155,160,163,168,176,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,324,325,327,333,343,353,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'cast_expression':([56,59,68,76,78,115,118,136,138,140,155,160,163,168,176,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,324,325,327,333,343,353,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[105,105,105,105,105,220,105,105,105,105,105,105,105,105,105,105,105,105,105,299,300,301,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,384,105,105,105,105,384,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'initializer_list':([155,385,],[272,425,]),'struct_declarator_list':([132,],[240,]),'logical_or_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,188,191,216,217,218,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'translation_unit':([0,],[40,]),'relational_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,185,188,191,196,200,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,312,313,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'struct_or_union':([0,1,11,13,34,35,40,52,56,64,69,78,79,94,98,118,128,129,140,163,186,188,191,224,233,263,269,280,334,376,449,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'selection_statement':([78,163,176,286,290,371,414,416,418,440,442,461,463,465,],[179,179,179,179,179,179,179,179,179,179,179,179,179,179,]),'enumerator':([57,126,230,340,],[122,122,337,337,]),'string':([56,59,68,76,78,87,89,93,115,118,136,138,140,155,160,163,168,176,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,324,325,327,333,343,353,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'enumeration_constant':([57,126,230,340,],[123,123,123,123,]),'parameter_declaration':([69,224,263,269,334,],[146,146,146,356,146,]),'direct_declarator':([4,46,51,65,74,132,147,263,266,345,],[49,67,49,49,49,49,49,49,67,49,]),'type_qualifier_list':([50,68,136,223,325,333,395,],[70,138,254,327,387,397,431,]),'designator':([155,276,359,385,453,],[273,362,273,273,273,]),'argument_expression_list':([217,],[320,]),'initializer':([76,155,275,359,385,411,453,],[153,270,361,409,270,439,409,]),'primary_expression':([56,59,68,76,78,87,89,93,115,118,136,138,140,155,160,163,168,176,184,185,188,191,193,194,195,196,197,198,200,201,202,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,324,325,327,333,343,353,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'declaration_specifiers':([0,1,11,13,34,35,40,52,69,78,79,163,224,263,269,280,334,],[4,44,54,55,60,61,4,74,147,74,74,74,147,147,147,74,147,]),'declaration':([0,40,52,78,79,163,280,],[26,26,77,172,183,172,367,]),'logical_and_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,188,191,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,322,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'declarator':([4,51,65,74,132,147,263,345,],[52,73,134,134,238,265,73,238,]),'shift_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,185,188,191,196,200,204,205,206,207,209,210,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,308,309,310,311,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'equality_expression':([56,59,68,76,78,118,136,138,140,155,160,163,168,176,184,185,188,191,196,200,211,216,217,218,219,223,228,239,252,254,256,271,275,280,284,286,287,289,290,293,325,327,333,343,359,366,367,371,382,383,385,387,389,395,397,411,412,413,414,416,417,418,431,433,440,442,450,451,453,461,463,465,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,314,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'jump_statement':([78,163,176,286,290,371,414,416,418,440,442,461,463,465,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'struct_declarator':([132,345,],[236,405,]),'function_definition':([0,40,],[30,30,]),'designation':([155,359,385,453,],[275,411,275,411,]),'parameter_list':([69,224,263,334,],[149,149,149,149,]),'enum_specifier':([0,1,11,13,34,35,40,52,56,64,69,78,79,94,98,118,128,129,140,163,186,188,191,224,233,263,269,280,334,376,449,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'generic_assoc_list':([376,],[419,]),'type_qualifier':([0,1,11,13,34,35,40,50,52,56,64,68,69,70,78,79,94,98,118,128,129,136,138,140,163,186,188,191,223,224,233,254,263,269,280,325,327,333,334,376,387,395,397,431,449,],[34,34,34,34,34,34,34,71,34,98,98,71,34,150,34,34,98,98,98,98,98,71,150,98,34,98,98,98,71,34,98,150,34,34,34,71,150,71,34,98,150,71,150,150,98,]),'alignment_specifier':([0,1,11,13,34,35,40,52,69,78,79,163,224,263,269,280,334,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'labeled_statement':([78,163,176,286,290,371,414,416,418,440,442,461,463,465,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'function_specifier':([0,1,11,13,34,35,40,52,69,78,79,163,224,263,269,280,334,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'specifier_qualifier_list':([56,64,94,98,118,128,129,140,186,188,191,233,376,449,],[120,132,192,199,120,132,132,120,120,120,120,132,120,120,]),'block_item':([78,163,],[175,281,]),'statement':([78,163,176,286,290,371,414,416,418,440,442,461,463,465,],[170,170,292,369,373,415,444,445,447,460,462,472,473,475,]),'constant_expression':([56,59,168,228,239,271,343,],[107,127,288,336,344,357,404,]),'init_declarator':([4,65,74,],[53,133,53,]),'direct_abstract_declarator':([120,147,224,227,263,266,],[225,225,225,335,225,335,]),'designator_list':([155,359,385,453,],[276,276,276,276,]),'expression':([78,118,140,160,163,176,188,191,216,218,280,286,287,289,290,293,366,367,371,412,413,414,416,417,418,440,442,461,463,465,],[165,221,221,279,165,165,221,221,317,321,165,165,370,372,165,375,165,165,165,441,443,165,165,446,165,165,165,165,165,165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser.py',32),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser.py',33),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression','parser.py',42),
  ('primary_expression -> string','primary_expression',1,'p_primary_expression','parser.py',43),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',44),
  ('primary_expression -> generic_selection','primary_expression',1,'p_primary_expression','parser.py',45),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression2','parser.py',54),
  ('constant -> I_CONSTANT','constant',1,'p_constant','parser.py',61),
  ('constant -> F_CONSTANT','constant',1,'p_constant','parser.py',62),
  ('constant -> CCONST','constant',1,'p_constant','parser.py',63),
  ('enumeration_constant -> IDENTIFIER','enumeration_constant',1,'p_enumeration_constant','parser.py',69),
  ('string -> STRINGLITERAL','string',1,'p_string','parser.py',74),
  ('string -> FUNC_NAME','string',1,'p_string','parser.py',75),
  ('generic_selection -> GENERIC LPAREN assignment_expression COMMA generic_assoc_list RPAREN','generic_selection',6,'p_generic_selection','parser.py',81),
  ('generic_assoc_list -> generic_association','generic_assoc_list',1,'p_generic_assoc_list','parser.py',86),
  ('generic_assoc_list -> generic_assoc_list COMMA generic_association','generic_assoc_list',3,'p_generic_assoc_list','parser.py',87),
  ('generic_association -> type_name COLON assignment_expression','generic_association',3,'p_generic_association','parser.py',92),
  ('generic_association -> DEFAULT COLON assignment_expression','generic_association',3,'p_generic_association','parser.py',93),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',98),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression','parser.py',99),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','parser.py',100),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression','parser.py',101),
  ('postfix_expression -> postfix_expression PERIOD IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser.py',102),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser.py',103),
  ('postfix_expression -> LPAREN type_name RPAREN LBRACE initializer_list RBRACE','postfix_expression',6,'p_postfix_expression','parser.py',104),
  ('postfix_expression -> LPAREN type_name RPAREN LBRACE initializer_list COMMA RBRACE','postfix_expression',7,'p_postfix_expression','parser.py',105),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression2','parser.py',114),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression2','parser.py',115),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser.py',127),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser.py',128),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',133),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression','parser.py',134),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression','parser.py',135),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression2','parser.py',146),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression2','parser.py',147),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression2','parser.py',148),
  ('unary_expression -> ALIGNOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression2','parser.py',149),
  ('unary_operator -> AND_OP','unary_operator',1,'p_unary_operator','parser.py',162),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','parser.py',163),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','parser.py',164),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','parser.py',165),
  ('unary_operator -> NOT_OP','unary_operator',1,'p_unary_operator','parser.py',166),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','parser.py',167),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',173),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','parser.py',174),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',183),
  ('multiplicative_expression -> multiplicative_expression TIMES cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',184),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',185),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',186),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',202),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',203),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',204),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',219),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression','parser.py',220),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression','parser.py',221),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',230),
  ('relational_expression -> relational_expression LT_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',231),
  ('relational_expression -> relational_expression GT_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',232),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',233),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',234),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',256),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',257),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',258),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',267),
  ('and_expression -> and_expression AND_OP equality_expression','and_expression',3,'p_and_expression','parser.py',268),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser.py',277),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser.py',278),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser.py',287),
  ('inclusive_or_expression -> inclusive_or_expression OR_OP exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser.py',288),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser.py',297),
  ('logical_and_expression -> logical_and_expression LAND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',298),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser.py',307),
  ('logical_or_expression -> logical_or_expression LOR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',308),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser.py',317),
  ('conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',318),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',327),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',328),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',340),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',341),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',342),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',343),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',344),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',345),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',346),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',347),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',348),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',349),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',350),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',357),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',358),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',367),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration','parser.py',372),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration','parser.py',373),
  ('declaration -> static_assert_declaration','declaration',1,'p_declaration','parser.py',374),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',383),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',384),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',385),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',386),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',387),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',388),
  ('declaration_specifiers -> function_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',389),
  ('declaration_specifiers -> function_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',390),
  ('declaration_specifiers -> alignment_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',391),
  ('declaration_specifiers -> alignment_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',392),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser.py',399),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','parser.py',400),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','parser.py',409),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',410),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser.py',423),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser.py',424),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser.py',425),
  ('storage_class_specifier -> THREAD_LOCAL','storage_class_specifier',1,'p_storage_class_specifier','parser.py',426),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser.py',427),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser.py',428),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser.py',433),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser.py',434),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser.py',435),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser.py',436),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser.py',437),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser.py',438),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser.py',439),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser.py',440),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser.py',441),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','parser.py',442),
  ('type_specifier -> COMPLEX','type_specifier',1,'p_type_specifier','parser.py',443),
  ('type_specifier -> IMAGINARY','type_specifier',1,'p_type_specifier','parser.py',444),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','parser.py',445),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','parser.py',446),
  ('type_specifier -> TYPEID','type_specifier',1,'p_type_specifier','parser.py',447),
  ('struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier','parser.py',453),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER LBRACE struct_declaration_list RBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier','parser.py',454),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier','parser.py',455),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','parser.py',460),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','parser.py',461),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser.py',466),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser.py',467),
  ('struct_declaration -> specifier_qualifier_list SEMI','struct_declaration',2,'p_struct_declaration','parser.py',472),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration','parser.py',473),
  ('struct_declaration -> static_assert_declaration','struct_declaration',1,'p_struct_declaration','parser.py',474),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',479),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',480),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',481),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',482),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser.py',487),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser.py',488),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','parser.py',493),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','parser.py',494),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser.py',495),
  ('enum_specifier -> ENUM LBRACE enumerator_list RBRACE','enum_specifier',4,'p_enum_specifier','parser.py',500),
  ('enum_specifier -> ENUM LBRACE enumerator_list COMMA RBRACE','enum_specifier',5,'p_enum_specifier','parser.py',501),
  ('enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list RBRACE','enum_specifier',5,'p_enum_specifier','parser.py',502),
  ('enum_specifier -> ENUM IDENTIFIER LBRACE enumerator_list COMMA RBRACE','enum_specifier',6,'p_enum_specifier','parser.py',503),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier','parser.py',504),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','parser.py',509),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','parser.py',510),
  ('enumerator -> enumeration_constant EQUALS constant_expression','enumerator',3,'p_enumerator','parser.py',515),
  ('enumerator -> enumeration_constant','enumerator',1,'p_enumerator','parser.py',516),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser.py',521),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','parser.py',522),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser.py',523),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','parser.py',529),
  ('function_specifier -> NORETURN','function_specifier',1,'p_function_specifier','parser.py',530),
  ('alignment_specifier -> ALIGNAS LPAREN type_name RPAREN','alignment_specifier',4,'p_alignment_specifier','parser.py',535),
  ('alignment_specifier -> ALIGNAS LPAREN constant_expression RPAREN','alignment_specifier',4,'p_alignment_specifier','parser.py',536),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser.py',541),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser.py',542),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','parser.py',549),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',550),
  ('direct_declarator -> direct_declarator LBRACKET RBRACKET','direct_declarator',3,'p_direct_declarator','parser.py',551),
  ('direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET','direct_declarator',4,'p_direct_declarator','parser.py',552),
  ('direct_declarator -> direct_declarator LBRACKET STATIC type_qualifier_list assignment_expression RBRACKET','direct_declarator',6,'p_direct_declarator','parser.py',553),
  ('direct_declarator -> direct_declarator LBRACKET STATIC assignment_expression RBRACKET','direct_declarator',5,'p_direct_declarator','parser.py',554),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list TIMES RBRACKET','direct_declarator',5,'p_direct_declarator','parser.py',555),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_declarator',6,'p_direct_declarator','parser.py',556),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list assignment_expression RBRACKET','direct_declarator',5,'p_direct_declarator','parser.py',557),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list RBRACKET','direct_declarator',4,'p_direct_declarator','parser.py',558),
  ('direct_declarator -> direct_declarator LBRACKET assignment_expression RBRACKET','direct_declarator',4,'p_direct_declarator','parser.py',559),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',560),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',561),
  ('direct_declarator -> direct_declarator LPAREN identifier_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',562),
  ('pointer -> TIMES type_qualifier_list pointer','pointer',3,'p_pointer','parser.py',575),
  ('pointer -> TIMES type_qualifier_list','pointer',2,'p_pointer','parser.py',576),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer','parser.py',577),
  ('pointer -> TIMES','pointer',1,'p_pointer','parser.py',578),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser.py',583),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser.py',584),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','parser.py',589),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','parser.py',590),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','parser.py',599),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','parser.py',600),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',609),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',610),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser.py',611),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','parser.py',620),
  ('identifier_list -> identifier_list COMMA IDENTIFIER','identifier_list',3,'p_identifier_list','parser.py',621),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser.py',626),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser.py',627),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',632),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser.py',633),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser.py',634),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',639),
  ('direct_abstract_declarator -> LBRACKET RBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',640),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',641),
  ('direct_abstract_declarator -> LBRACKET STATIC type_qualifier_list assignment_expression RBRACKET','direct_abstract_declarator',5,'p_direct_abstract_declarator','parser.py',642),
  ('direct_abstract_declarator -> LBRACKET STATIC assignment_expression RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',643),
  ('direct_abstract_declarator -> LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_abstract_declarator',5,'p_direct_abstract_declarator','parser.py',644),
  ('direct_abstract_declarator -> LBRACKET type_qualifier_list assignment_expression RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',645),
  ('direct_abstract_declarator -> LBRACKET type_qualifier_list RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',646),
  ('direct_abstract_declarator -> LBRACKET assignment_expression RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',647),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',648),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',649),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET STATIC type_qualifier_list assignment_expression RBRACKET','direct_abstract_declarator',6,'p_direct_abstract_declarator','parser.py',650),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET STATIC assignment_expression RBRACKET','direct_abstract_declarator',5,'p_direct_abstract_declarator','parser.py',651),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET type_qualifier_list assignment_expression RBRACKET','direct_abstract_declarator',5,'p_direct_abstract_declarator','parser.py',652),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_abstract_declarator',6,'p_direct_abstract_declarator','parser.py',653),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET type_qualifier_list RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',654),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',655),
  ('direct_abstract_declarator -> LPAREN RPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',656),
  ('direct_abstract_declarator -> LPAREN parameter_type_list RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',657),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',658),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',659),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer','parser.py',665),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer','parser.py',666),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser.py',667),
  ('initializer_list -> designation initializer','initializer_list',2,'p_initializer_list','parser.py',676),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser.py',677),
  ('initializer_list -> initializer_list COMMA designation initializer','initializer_list',4,'p_initializer_list','parser.py',678),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','parser.py',679),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','parser.py',685),
  ('designator_list -> designator','designator_list',1,'p_designator_list','parser.py',690),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','parser.py',691),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','parser.py',696),
  ('designator -> PERIOD IDENTIFIER','designator',2,'p_designator','parser.py',697),
  ('static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression COMMA STRINGLITERAL RPAREN SEMI','static_assert_declaration',7,'p_static_assert_declaration','parser.py',702),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',707),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',708),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',709),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',710),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',711),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',712),
  ('labeled_statement -> IDENTIFIER COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',718),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','parser.py',719),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',720),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compound_statement','parser.py',726),
  ('compound_statement -> LBRACE block_item_list RBRACE','compound_statement',3,'p_compound_statement','parser.py',727),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','parser.py',736),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','parser.py',737),
  ('block_item -> declaration','block_item',1,'p_block_item','parser.py',746),
  ('block_item -> statement','block_item',1,'p_block_item','parser.py',747),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement','parser.py',753),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement','parser.py',754),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parser.py',762),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',763),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement2','parser.py',792),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','parser.py',797),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement2','parser.py',814),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement','iteration_statement',6,'p_iteration_statement3','parser.py',831),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement3','parser.py',832),
  ('iteration_statement -> FOR LPAREN declaration expression_statement RPAREN statement','iteration_statement',6,'p_iteration_statement4','parser.py',867),
  ('iteration_statement -> FOR LPAREN declaration expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement4','parser.py',868),
  ('jump_statement -> GOTO IDENTIFIER SEMI','jump_statement',3,'p_jump_statement','parser.py',903),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement','parser.py',904),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement','parser.py',905),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement2','parser.py',910),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement2','parser.py',911),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser.py',923),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser.py',924),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','parser.py',930),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','parser.py',931),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',940),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',941),
]
